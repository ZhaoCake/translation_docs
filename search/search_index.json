{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6587\u6863\u7ffb\u8bd1\u96c6\u5408","text":"<p>\u6b22\u8fce\u8bbf\u95ee\u6211\u7684\u6587\u6863\u7ffb\u8bd1\u96c6\u5408\uff01\u8fd9\u4e2a\u7f51\u7ad9\u6536\u96c6\u4e86\u6211\u5728\u5b66\u4e60\u548c\u5de5\u4f5c\u8fc7\u7a0b\u4e2d\u7ffb\u8bd1\u7684\u5404\u79cd\u6280\u672f\u6587\u6863\uff0c\u4e3b\u8981\u7528\u4e8e\u4e2a\u4eba\u5b66\u4e60\u548c\u53c2\u8003\u3002</p>"},{"location":"#_2","title":"\u5173\u4e8e\u672c\u7ad9","text":"<p>\u8fd9\u4e2a\u7f51\u7ad9\u662f\u6211\u4e2a\u4eba\u7ef4\u62a4\u7684\u6280\u672f\u6587\u6863\u7ffb\u8bd1\u96c6\u5408\u3002\u6211\u5c06\u6301\u7eed\u66f4\u65b0\u548c\u6dfb\u52a0\u65b0\u7684\u6587\u6863\u7ffb\u8bd1\uff0c\u4ee5\u4fbf\u5728\u5b66\u4e60\u548c\u4f7f\u7528\u5404\u79cd\u6280\u672f\u65f6\u6709\u4e2d\u6587\u53c2\u8003\u8d44\u6599\u3002</p> <p>\u7ffb\u8bd1\u7684\u5185\u5bb9\u5c3d\u91cf\u4fdd\u6301\u4e0e\u539f\u6587\u4e00\u81f4\uff0c\u540c\u65f6\u7ed3\u5408\u4e2d\u6587\u8bed\u5883\u8fdb\u884c\u9002\u5f53\u8c03\u6574\uff0c\u4f7f\u6587\u6863\u66f4\u6613\u4e8e\u7406\u89e3\u3002</p>"},{"location":"#_3","title":"\u5f53\u524d\u6587\u6863","text":"<p>\u76ee\u524d\u672c\u7ad9\u5305\u542b\u4ee5\u4e0b\u6587\u6863\u7684\u4e2d\u6587\u7ffb\u8bd1\uff1a</p>"},{"location":"#chisel-cookbook","title":"Chisel Cookbook","text":"<p>Chisel\u662f\u4e00\u79cd\u7528Scala\u7f16\u5199\u7684\u5f00\u6e90\u786c\u4ef6\u63cf\u8ff0\u8bed\u8a00(HDL)\uff0c\u901a\u8fc7\u63d0\u4f9b\u66f4\u9ad8\u7ea7\u7684\u62bd\u8c61\u548c\u7c7b\u578b\u5b89\u5168\u529f\u80fd\uff0c\u4f7f\u786c\u4ef6\u8bbe\u8ba1\u66f4\u52a0\u9ad8\u6548\u548c\u53ef\u9760\u3002</p> <p>Chisel Cookbook\u5305\u542b\u4e86\u5404\u79cd\u5e38\u89c1\u95ee\u9898\u7684\u89e3\u51b3\u65b9\u6848\u548c\u6700\u4f73\u5b9e\u8df5\uff0c\u6db5\u76d6\u4e86\u4ee5\u4e0b\u4e3b\u9898\uff1a</p> <ul> <li>\u901a\u7528\u6280\u5de7 - \u57fa\u672c\u64cd\u4f5c\u548c\u5e38\u89c1\u6a21\u5f0f</li> <li>\u547d\u540d - \u5982\u4f55\u5904\u7406\u4fe1\u53f7\u547d\u540d\u95ee\u9898</li> <li>\u5c42\u6b21\u7ed3\u6784 - \u6a21\u5757\u5b9e\u4f8b\u5316\u548c\u5c42\u6b21\u5316\u8bbe\u8ba1</li> <li>DataView - \u6570\u636e\u89c6\u56fe\u548c\u7c7b\u578b\u8f6c\u6362</li> <li>\u5e8f\u5217\u5316 - \u6a21\u5757\u5e8f\u5217\u5316\u6280\u672f</li> <li>\u5bf9\u8c61\u6a21\u578b - Chisel\u5bf9\u8c61\u6a21\u578b\u7684\u4f7f\u7528</li> <li>\u6d4b\u8bd5 - \u786c\u4ef6\u6d4b\u8bd5\u65b9\u6cd5</li> <li>\u6545\u969c\u6392\u9664 - \u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6848</li> </ul>"},{"location":"#_4","title":"\u5373\u5c06\u6dfb\u52a0","text":"<p>\u6211\u8ba1\u5212\u5728\u672a\u6765\u6dfb\u52a0\u66f4\u591a\u6280\u672f\u6587\u6863\u7684\u7ffb\u8bd1\uff0c\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\uff1a</p> <ul> <li>\u5176\u4ed6\u786c\u4ef6\u8bbe\u8ba1\u76f8\u5173\u6587\u6863</li> <li>\u7f16\u7a0b\u8bed\u8a00\u53c2\u8003\u624b\u518c</li> <li>\u6846\u67b6\u548c\u5e93\u7684\u4f7f\u7528\u6307\u5357</li> <li>\u5f00\u53d1\u5de5\u5177\u7684\u4f7f\u7528\u6559\u7a0b</li> </ul>"},{"location":"#_5","title":"\u8d21\u732e\u4e0e\u53cd\u9988","text":"<p>\u5982\u679c\u4f60\u53d1\u73b0\u4efb\u4f55\u7ffb\u8bd1\u9519\u8bef\u6216\u6709\u6539\u8fdb\u5efa\u8bae\uff0c\u6b22\u8fce\u901a\u8fc7GitHub\u4ed3\u5e93\u63d0\u4ea4issue\u6216pull request\u3002</p>"},{"location":"cookbooks/","title":"\u7ffb\u8bd1\u6587\u732e - Chisel Cookbooks","text":"<p>Chisel\u786c\u4ef6\u8bbe\u8ba1\u8bed\u8a00\u7684Cookbooks\u4e2d\u6587\u6587\u6863\u3002</p>"},{"location":"cookbooks/#chisel","title":"\u4ec0\u4e48\u662fChisel\uff1f","text":"<p>Chisel\uff08Constructing Hardware In a Scala Embedded Language\uff09\u662f\u4e00\u79cd\u5f00\u6e90\u7684\u786c\u4ef6\u8bbe\u8ba1\u8bed\u8a00\uff0c\u5b83\u5d4c\u5165\u5728Scala\u7f16\u7a0b\u8bed\u8a00\u4e2d\uff0c\u7528\u4e8e\u63cf\u8ff0\u6570\u5b57\u7535\u8def\u3002Chisel\u63d0\u4f9b\u4e86\u62bd\u8c61\u7684\u3001\u9ad8\u7ea7\u7684\u786c\u4ef6\u6784\u9020\uff0c\u4f7f\u786c\u4ef6\u8bbe\u8ba1\u66f4\u52a0\u6a21\u5757\u5316\u3001\u53ef\u91cd\u7528\u548c\u53ef\u6d4b\u8bd5\u3002</p>"},{"location":"cookbooks/#_1","title":"\u624b\u518c","text":"<p>Chisel\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217cookbooks\uff0c\u5e2e\u52a9\u60a8\u7406\u89e3\u548c\u4f7f\u7528\u5404\u79cd\u529f\u80fd\uff1a</p> <ul> <li>\u901a\u7528\u6280\u5de7\u624b\u518c - \u63d0\u4f9b\u5e38\u7528\u7c7b\u578b\u8f6c\u6362\u548c\u5176\u4ed6\u5b9e\u7528\u6280\u5de7</li> <li>\u547d\u540d\u624b\u518c - \u89e3\u91ca\u5982\u4f55\u4e3a\u6a21\u5757\u548c\u4fe1\u53f7\u547d\u540d</li> <li>\u5c42\u6b21\u7ed3\u6784\u624b\u518c - \u63cf\u8ff0\u6a21\u5757\u5c42\u6b21\u7ed3\u6784\u548c\u5b9e\u4f8b\u5316</li> <li>DataView\u624b\u518c - \u4ecb\u7ecdDataView\u529f\u80fd\u7684\u4f7f\u7528</li> <li>\u5e8f\u5217\u5316\u624b\u518c - \u8bb2\u89e3\u6a21\u5757\u5e8f\u5217\u5316\u65b9\u6cd5</li> <li>\u5bf9\u8c61\u6a21\u578b\u624b\u518c - \u89e3\u91ca\u5bf9\u8c61\u6a21\u578b\u7684\u4f7f\u7528</li> <li>\u6d4b\u8bd5\u624b\u518c - \u4ecb\u7ecdChisel\u6d4b\u8bd5\u65b9\u6cd5</li> <li>\u6545\u969c\u6392\u9664 - \u5e38\u89c1\u95ee\u9898\u89e3\u51b3\u65b9\u6848</li> </ul>"},{"location":"cookbooks/#_2","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<p>\u5982\u679c\u60a8\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u53ef\u4ee5\u8bbf\u95eeChisel GitHub\u4ed3\u5e93\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u6216\u63d0\u4ea4\u95ee\u9898\u3002</p>"},{"location":"cookbooks/cookbook/","title":"\u901a\u7528\u6280\u5de7\u624b\u518c","text":"<p>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e9b\u793a\u4f8b\u4f7f\u7528\u4e86Chisel\u7684scala\u98ce\u683c\u6253\u5370\u3002</p> <ul> <li>\u901a\u7528\u6280\u5de7\u624b\u518c<ul> <li>\u7c7b\u578b\u8f6c\u6362<ul> <li>\u5982\u4f55\u4eceBundle\u5b9e\u4f8b\u521b\u5efaUInt\uff1f</li> <li>\u5982\u4f55\u4eceUInt\u521b\u5efaBundle\uff1f</li> <li>\u5982\u4f55\u5c06Bundle/Vec\u8fde\u63a5\u52300\uff1f</li> <li>\u5982\u4f55\u4eceUInt\u521b\u5efa\u4e00\u4e2a\u5e03\u5c14\u503c\u7684Vec\uff1f</li> <li>\u5982\u4f55\u4ece\u5e03\u5c14\u503c\u7684Vec\u521b\u5efaUInt\uff1f</li> <li>\u5982\u4f55\u8fde\u63a5Bundle\u5b57\u6bb5\u7684\u5b50\u96c6\uff1f</li> </ul> </li> <li>\u5411\u91cf\u548c\u5bc4\u5b58\u5668<ul> <li>\u6211\u53ef\u4ee5\u521b\u5efa2D\u62163D\u5411\u91cf\u5417\uff1f</li> <li>\u5982\u4f55\u521b\u5efa\u5bc4\u5b58\u5668\u7684\u5411\u91cf\uff1f</li> <li>\u5982\u4f55\u521b\u5efaVec\u7c7b\u578b\u7684Reg\uff1f</li> <li>\u5982\u4f55\u90e8\u5206\u91cd\u7f6e\u805a\u5408\u5bc4\u5b58\u5668\uff1f</li> </ul> </li> <li>Bundles<ul> <li>\u5982\u4f55\u5904\u7406\u522b\u540dBundle\u5b57\u6bb5\uff1f<ul> <li>1. 0-arity\u51fd\u6570\u53c2\u6570<ul> <li>\u522b\u540d\u8b66\u544a</li> </ul> </li> <li>2. By-name\u51fd\u6570\u53c2\u6570</li> <li>3. \u5e26\u65b9\u5411\u7684Bundle\u5b57\u6bb5</li> <li>4. \u76f4\u63a5\u8c03\u7528.cloneType</li> </ul> </li> <li>\u5982\u4f55\u5904\u7406\"\u65e0\u6cd5\u514b\u9686\"\u9519\u8bef\uff1f</li> </ul> </li> <li>\u5982\u4f55\u50cf\u5728Verilog\u4e2d\u90a3\u6837\u89e3\u5305\u503c\uff08\"\u53cd\u5411\u8fde\u63a5\"\uff09\uff1f</li> <li>\u5982\u4f55\u8fdb\u884c\u5b50\u5b57\u8d4b\u503c\uff08\u4e3aUInt\u4e2d\u7684\u67d0\u4e9b\u4f4d\u8d4b\u503c\uff09\uff1f</li> <li>\u5982\u4f55\u521b\u5efa\u53ef\u9009\u7684I/O\uff1f</li> <li>\u5982\u4f55\u521b\u5efa\u6ca1\u6709\u524d\u7f00\u7684I/O\uff1f</li> <li>\u5982\u4f55\u5728Module\u5185\u8986\u76d6\u9690\u5f0f\u65f6\u949f\u6216\u590d\u4f4d\u4fe1\u53f7\uff1f</li> <li>\u5982\u4f55\u6700\u5c0f\u5316\u8f93\u51fa\u5411\u91cf\u4e2d\u4f7f\u7528\u7684\u4f4d\u6570\uff1f</li> <li>\u5982\u4f55\u89e3\u51b3\"\u52a8\u6001\u7d22\u5f15...\u5bf9\u4e8e\u88ab\u63d0\u53d6\u8005\u6765\u8bf4\u592a\u5bbd/\u592a\u7a84...\"\uff1f<ul> <li>\u5f53\u7d22\u5f15\u592a\u5bbd\u65f6\u4f7f\u7528\u4f4d\u63d0\u53d6</li> </ul> </li> <li>\u53ef\u9884\u6d4b\u7684\u547d\u540d<ul> <li>\u5982\u4f55\u4f7fChisel\u5728when/withClockAndReset\u7b49\u5757\u4e2d\u6b63\u786e\u547d\u540d\u4fe1\u53f7\uff1f</li> <li>\u5982\u4f55\u4f7fChisel\u6b63\u786e\u547d\u540d\u5411\u91cf\u8bfb\u53d6\u7684\u7ed3\u679c\uff1f</li> <li>\u5982\u4f55\u52a8\u6001\u8bbe\u7f6e/\u53c2\u6570\u5316\u6a21\u5757\u7684\u540d\u79f0\uff1f</li> </ul> </li> <li>\u65b9\u5411\u6027<ul> <li>\u5982\u4f55\u4ece\u53cc\u5411Bundle\uff08\u6216\u5176\u4ed6Data\uff09\u4e2d\u53bb\u9664\u65b9\u5411\uff1f</li> </ul> </li> </ul> </li> </ul>"},{"location":"cookbooks/cookbook/#_2","title":"\u7c7b\u578b\u8f6c\u6362","text":""},{"location":"cookbooks/cookbook/#bundleuint","title":"\u5982\u4f55\u4eceBundle\u5b9e\u4f8b\u521b\u5efaUInt\uff1f","text":"<p>\u5728<code>Bundle</code>\u5b9e\u4f8b\u4e0a\u8c03\u7528<code>asUInt</code>\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val foo = UInt(4.W)\n  val bar = UInt(4.W)\n}\n\nclass Foo extends Module {\n  val bundle = Wire(new MyBundle)\n  bundle.foo := 0xc.U\n  bundle.bar := 0x3.U\n  val uint = bundle.asUInt\n  printf(cf\"$uint\") // 195\n\n  // Test\n  assert(uint === 0xc3.U)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre>"},{"location":"cookbooks/cookbook/#uintbundle","title":"\u5982\u4f55\u4eceUInt\u521b\u5efaBundle\uff1f","text":"<p>\u4f7f\u7528<code>asTypeOf</code>\u65b9\u6cd5\u5c06<code>UInt</code>\u91cd\u65b0\u89e3\u91ca\u4e3a<code>Bundle</code>\u7684\u7c7b\u578b\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val foo = UInt(4.W)\n  val bar = UInt(4.W)\n}\n\nclass Foo extends Module {\n  val uint = 0xb4.U\n  val bundle = uint.asTypeOf(new MyBundle)\n\n  printf(cf\"$bundle\") // Bundle(foo -&gt; 11, bar -&gt; 4)\n\n  // Test\n  assert(bundle.foo === 0xb.U)\n  assert(bundle.bar === 0x4.U)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre>"},{"location":"cookbooks/cookbook/#bundlevec0","title":"\u5982\u4f55\u5c06Bundle/Vec\u8fde\u63a5\u52300\uff1f","text":"<p>\u4f60\u53ef\u4ee5\u50cf\u4e0a\u9762\u90a3\u6837\u4f7f\u7528<code>asTypeOf</code>\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u5173\u5fc3\u4f60\u8981\u8fde\u63a5\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>chiselTypeOf</code>\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val foo = UInt(4.W)\n  val bar = Vec(4, UInt(1.W))\n}\n\nclass Foo(typ: MyBundle) extends Module {\n  val bundleA = IO(Output(typ))\n  val bundleB = IO(Output(typ))\n\n  // typ\u5df2\u7ecf\u662f\u4e00\u4e2aChisel\u6570\u636e\u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u5728\u8fd9\u91cc\u4f7f\u7528\u5b83\uff0c\u4f46\u4f60\n  // \u9700\u8981\u77e5\u9053bundleA\u7684\u7c7b\u578b\u662ftyp\n  bundleA := 0.U.asTypeOf(typ)\n\n  // bundleB\u662f\u4e00\u4e2a\u786c\u4ef6\u6570\u636eIO(Output(...))\uff0c\u6240\u4ee5\u9700\u8981\u8c03\u7528chiselTypeOf\uff0c\n  // \u4f46\u8fd9\u5c06\u9002\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684bundleB\uff1a\n  bundleB := 0.U.asTypeOf(chiselTypeOf(bundleB))\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo(new MyBundle))\n</code></pre></p>"},{"location":"cookbooks/cookbook/#uintvec","title":"\u5982\u4f55\u4eceUInt\u521b\u5efa\u4e00\u4e2a\u5e03\u5c14\u503c\u7684Vec\uff1f","text":"<p>\u4f7f\u7528<code>VecInit</code>\uff0c\u4f20\u5165\u901a\u8fc7<code>asBools</code>\u65b9\u6cd5\u751f\u6210\u7684<code>Seq[Bool]</code>\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val uint = 0xc.U\n  val vec = VecInit(uint.asBools)\n\n  printf(cf\"$vec\") // Vec(0, 0, 1, 1)\n\n  // Test\n  assert(vec(0) === false.B)\n  assert(vec(1) === false.B)\n  assert(vec(2) === true.B)\n  assert(vec(3) === true.B)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre>"},{"location":"cookbooks/cookbook/#vecuint","title":"\u5982\u4f55\u4ece\u5e03\u5c14\u503c\u7684Vec\u521b\u5efaUInt\uff1f","text":"<p>\u4f7f\u7528\u5185\u7f6e\u51fd\u6570<code>asUInt</code></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val vec = VecInit(true.B, false.B, true.B, true.B)\n  val uint = vec.asUInt\n\n  printf(cf\"$uint\") // 13\n\n  // Test\n  // (\u8bb0\u4f4fVec\u4e2d\u6700\u5de6\u4fa7\u7684Bool\u662f\u4f4e\u4f4d)\n  assert(0xd.U === uint)\n\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre>"},{"location":"cookbooks/cookbook/#bundle","title":"\u5982\u4f55\u8fde\u63a5Bundle\u5b57\u6bb5\u7684\u5b50\u96c6\uff1f","text":"<p>\u53c2\u89c1DataView cookbook\u3002</p>"},{"location":"cookbooks/cookbook/#_3","title":"\u5411\u91cf\u548c\u5bc4\u5b58\u5668","text":""},{"location":"cookbooks/cookbook/#2d3d","title":"\u6211\u53ef\u4ee5\u521b\u5efa2D\u62163D\u5411\u91cf\u5417\uff1f","text":"<p>\u662f\u7684\u3002\u4f7f\u7528<code>VecInit</code>\uff0c\u4f60\u53ef\u4ee5\u521b\u5efa\u5305\u542bChisel\u7c7b\u578b\u5411\u91cf\u7684\u5411\u91cf\u3002\u65b9\u6cd5<code>fill</code>\u548c<code>tabulate</code>\u53ef\u4ee5\u521b\u5efa\u8fd9\u4e9b\u591a\u7ef4\u5411\u91cf\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val foo = UInt(4.W)\n  val bar = UInt(4.W)\n}\n\nclass Foo extends Module {\n  //2D Fill\n  val twoDVec = VecInit.fill(2, 3)(5.U)\n  //3D Fill\n  val myBundle = Wire(new MyBundle)\n  myBundle.foo := 0xc.U\n  myBundle.bar := 0x3.U\n  val threeDVec = VecInit.fill(1, 2, 3)(myBundle)\n  assert(threeDVec(0)(0)(0).foo === 0xc.U &amp;&amp; threeDVec(0)(0)(0).bar === 0x3.U)\n\n  //2D Tabulate\n  val indexTiedVec = VecInit.tabulate(2, 2){ (x, y) =&gt; (x + y).U }\n  assert(indexTiedVec(0)(0) === 0.U)\n  assert(indexTiedVec(0)(1) === 1.U)\n  assert(indexTiedVec(1)(0) === 1.U)\n  assert(indexTiedVec(1)(1) === 2.U)\n  //3D Tabulate\n  val indexTiedVec3D = VecInit.tabulate(2, 3, 4){ (x, y, z) =&gt; (x + y * z).U }\n  assert(indexTiedVec3D(0)(0)(0) === 0.U)\n  assert(indexTiedVec3D(1)(1)(1) === 2.U)\n  assert(indexTiedVec3D(1)(1)(2) === 3.U)\n  assert(indexTiedVec3D(1)(1)(3) === 4.U)\n  assert(indexTiedVec3D(1)(2)(3) === 7.U)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_4","title":"\u5982\u4f55\u521b\u5efa\u5bc4\u5b58\u5668\u7684\u5411\u91cf\uff1f","text":"<p>\u89c4\u5219\uff01\u4f7f\u7528Reg\u7684Vec\u800c\u4e0d\u662fVec\u7684Reg\uff01</p> <p>\u4f60\u521b\u5efa\u4e00\u4e2aVec\u7c7b\u578b\u7684Reg\u3002\u56e0\u4e3aVec\u662f\u4e00\u4e2a\u7c7b\u578b\uff08\u5982<code>UInt</code>\u3001<code>Bool</code>\uff09\u800c\u4e0d\u662f\u4e00\u4e2a\u503c\uff0c\u6211\u4eec\u5fc5\u987b\u5c06Vec\u7ed1\u5b9a\u5230\u67d0\u4e2a\u5177\u4f53\u7684\u503c\u3002</p>"},{"location":"cookbooks/cookbook/#vecreg","title":"\u5982\u4f55\u521b\u5efaVec\u7c7b\u578b\u7684Reg\uff1f","text":"<p>\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c<code>Vec</code>\u7684API\u6587\u6863\u63d0\u4f9b\u4e86\u66f4\u591a\u4fe1\u606f\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val regOfVec = Reg(Vec(4, UInt(32.W))) // 32\u4f4dUInts\u7684\u5bc4\u5b58\u5668\n  regOfVec(0) := 123.U                   // \u5bf9Vec\u5143\u7d20\u7684\u8d4b\u503c\n  regOfVec(1) := 456.U\n  regOfVec(2) := 789.U\n  regOfVec(3) := regOfVec(0)\n\n  // \u521d\u59cb\u5316\u4e3a\u96f6\u768432\u4f4dUInts\u7684Vec\u7c7b\u578b\u7684Reg\n  //   \u6ce8\u610fSeq.fill\u6784\u9020\u4e864\u4e2a\u503c\u4e3a0\u768432\u4f4dUInt\u5b57\u9762\u91cf\n  //   VecInit(...)\u7136\u540e\u6784\u9020\u4e86\u8fd9\u4e9b\u5b57\u9762\u91cf\u7684Wire\n  //   \u7136\u540eReg\u88ab\u521d\u59cb\u5316\u4e3aWire\u7684\u503c\uff08\u8fd9\u7ed9\u5b83\u76f8\u540c\u7684\u7c7b\u578b\uff09\n  val initRegOfVec = RegInit(VecInit(Seq.fill(4)(0.U(32.W))))\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_5","title":"\u5982\u4f55\u90e8\u5206\u91cd\u7f6e\u805a\u5408\u5bc4\u5b58\u5668\uff1f","text":"<p>\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u90e8\u5206\u6307\u5b9a\u7684Bundle\u5b57\u9762\u91cf \u6216Vec\u5b57\u9762\u91cf\u6765\u5339\u914dReg\u7684\u7c7b\u578b\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.BundleLiterals._\n\nclass MyBundle extends Bundle {\n  val foo = UInt(8.W)\n  val bar = UInt(8.W)\n}\n\nclass MyModule extends Module {\n  // \u53ea\u6709.foo\u4f1a\u88ab\u91cd\u7f6e\uff0c.bar\u5c06\u6ca1\u6709\u91cd\u7f6e\u503c\n  val reg = RegInit((new MyBundle).Lit(_.foo -&gt; 123.U))\n}\n</code></pre> <p>\u5982\u679c\u4f60\u7684\u521d\u59cb\u503c\u4e0d\u662f\u5b57\u9762\u91cf\uff0c\u6216\u8005\u4f60\u53ea\u662f\u559c\u6b22\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a Wire\u4f5c\u4e3aReg\u7684\u521d\u59cb\u503c\u3002\u53ea\u9700\u5c06\u4f60\u4e0d\u5e0c\u671b\u91cd\u7f6e\u7684\u5b57\u6bb5\u8fde\u63a5\u5230<code>DontCare</code>\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass MyModule2 extends Module {\n  val reg = RegInit({\n    // Wire\u53ef\u4ee5\u5728reg\u4e4b\u524d\u6784\u9020\uff0c\u800c\u4e0d\u662f\u5728RegInit\u8303\u56f4\u5185\uff0c\n    // \u4f46\u8fd9\u79cd\u98ce\u683c\u6709\u5f88\u597d\u7684\u8bcd\u6cd5\u4f5c\u7528\u57df\u884c\u4e3a\uff0c\u4fdd\u6301Wire\u7684\u79c1\u6709\u6027\n    val init = Wire(new MyBundle)\n    init := DontCare // \u6ca1\u6709\u5b57\u6bb5\u4f1a\u88ab\u91cd\u7f6e\n    init.foo := 123.U // \u6700\u540e\u8fde\u63a5\u8986\u76d6\uff0c.foo\u88ab\u91cd\u7f6e\n    init\n  })\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new MyModule)\nchisel3.docs.emitSystemVerilog(new MyModule2)\n</code></pre>"},{"location":"cookbooks/cookbook/#bundles","title":"Bundles","text":""},{"location":"cookbooks/cookbook/#bundle_1","title":"\u5982\u4f55\u5904\u7406\u522b\u540dBundle\u5b57\u6bb5\uff1f","text":"<pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible:reset\nimport chisel3._\n\nclass Top[T &lt;: Data](gen: T) extends Module {\n  val in = IO(Input(gen))\n  val out = IO(Output(gen))\n  out := in\n}\n</code></pre> <p>\u5728\u521b\u5efaBundle\u65f6\u9075\u5faa<code>gen</code>\u6a21\u5f0f\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u96be\u4ee5\u7406\u89e3\u7684\u9519\u8bef\u6d88\u606f\uff1a</p> <p>```scala mdoc class AliasedBundleT &lt;: Data extends Bundle {   val foo = gen   val bar = gen } <pre><code>```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\ngetVerilogString(new Top(new AliasedBundle(UInt(8.W))))\n</code></pre></p> <p>\u8fd9\u4e2a\u9519\u8bef\u8868\u660e<code>AliasedBundle</code>\u7684\u5b57\u6bb5<code>foo</code>\u548c<code>bar</code>\u5728\u5185\u5b58\u4e2d\u662f\u5b8c\u5168\u76f8\u540c\u7684\u5bf9\u8c61\u3002 \u8fd9\u5bf9Chisel\u6765\u8bf4\u662f\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u80fd\u591f\u533a\u5206<code>foo</code>\u548c<code>bar</code>\u7684\u4f7f\u7528\uff0c\u4f46\u5f53\u5b83\u4eec\u5f15\u7528\u76f8\u540c\u65f6\u65e0\u6cd5\u533a\u5206\u3002</p> <p>\u6ce8\u610f\uff0c\u4ee5\u4e0b\u793a\u4f8b\u770b\u8d77\u6765\u4e0d\u540c\uff0c\u4f46\u4f1a\u7ed9\u4f60\u5e26\u6765\u5b8c\u5168\u76f8\u540c\u7684\u95ee\u9898\uff1a</p> <p><code>``scala mdoc class AlsoAliasedBundle[T &lt;: Data](val gen: T) extends Bundle {                                 // ^ \u8fd9\u4e2aval\u4f7f</code>gen<code>\u6210\u4e3a\u4e00\u4e2a\u5b57\u6bb5\uff0c\u5c31\u50cf</code>foo`   val foo = gen } <pre><code>\u901a\u8fc7\u4f7f`gen`\u6210\u4e3a\u4e00\u4e2a`val`\uff0c\u5b83\u6210\u4e3a`class`\u7684\u516c\u5171\u5b57\u6bb5\uff0c\u5c31\u50cf`foo`\u4e00\u6837\u3002\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\ngetVerilogString(new Top(new AlsoAliasedBundle(UInt(8.W))))\n</code></pre></p> <p>\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6bcf\u79cd\u65b9\u6cd5\u90fd\u6709\u81ea\u5df1\u7684\u4f18\u7f3a\u70b9\u3002</p>"},{"location":"cookbooks/cookbook/#1-0-arity","title":"1. 0-arity\u51fd\u6570\u53c2\u6570","text":"<p>\u4e0e\u5176\u5c06\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u4f60\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a0-arity\u51fd\u6570\uff08\u65e0\u53c2\u6570\u7684\u51fd\u6570\uff09\uff1a</p> <p>```scala mdoc class UsingAFunctionBundleT &lt;: Data extends Bundle {   val foo = gen()   val bar = gen() } <pre><code>\u6ce8\u610f`gen`\u7684\u7c7b\u578b\u73b0\u5728\u662f`() =&gt; T`\u3002\n\u56e0\u4e3a\u5b83\u73b0\u5728\u662f\u4e00\u4e2a\u51fd\u6570\u800c\u4e0d\u662f`Data`\u7684\u5b50\u7c7b\u578b\uff0c\u4f60\u53ef\u4ee5\u5b89\u5168\u5730\u5c06`gen`\u8bbe\u4e3a`val`\uff0c\u800c\u4e0d\u4f1a\n\u4f7f\u5b83\u6210\u4e3a`Bundle`\u7684\u786c\u4ef6\u5b57\u6bb5\u3002\n\n\u6ce8\u610f\u8fd9\u4e5f\u610f\u5473\u7740\u4f60\u5fc5\u987b\u5c06`gen`\u4f5c\u4e3a\u51fd\u6570\u4f20\u9012\uff0c\u4f8b\u5982\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nchisel3.docs.emitSystemVerilog(new Top(new UsingAFunctionBundle(() =&gt; UInt(8.W))))\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_6","title":"\u522b\u540d\u8b66\u544a","text":"<p>\u8b66\u544a\uff1a\u4f60\u5fc5\u987b\u786e\u4fdd<code>gen</code>\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u6355\u83b7\u5df2\u6784\u9020\u7684\u503c\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\nclass MisusedFunctionArguments extends Module {\n  // \u8fd9\u79cd\u7528\u6cd5\u662f\u6b63\u786e\u7684\n  val in = IO(Input(new UsingAFunctionBundle(() =&gt; UInt(8.W))))\n\n  // \u8fd9\u79cd\u7528\u6cd5\u662f\u4e0d\u6b63\u786e\u7684\n  val fizz = UInt(8.W)\n  val out = IO(Output(new UsingAFunctionBundle(() =&gt; fizz)))\n}\ngetVerilogString(new MisusedFunctionArguments)\n</code></pre> \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u503c<code>fizz</code>\u548c<code>out</code>\u7684\u5b57\u6bb5<code>foo</code>\u548c<code>bar</code>\u5728\u5185\u5b58\u4e2d\u90fd\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002</p>"},{"location":"cookbooks/cookbook/#2-by-name","title":"2. By-name\u51fd\u6570\u53c2\u6570","text":"<p>\u529f\u80fd\u4e0a\u4e0e(1)\u76f8\u540c\uff0c\u4f46\u8bed\u6cd5\u66f4\u52a0\u5fae\u5999\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528Scala\u6309\u540d\u79f0\u51fd\u6570\u53c2\u6570\uff1a</p> <p>```scala mdoc class UsingByNameParametersT &lt;: Data extends Bundle {   val foo = gen   val bar = gen } <pre><code>\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4f20\u9012\u53c2\u6570\u65f6\u4e0d\u5305\u62ec`() =&gt;`\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nchisel3.docs.emitSystemVerilog(new Top(new UsingByNameParameters(UInt(8.W))))\n</code></pre></p> <p>\u6ce8\u610f\uff0c\u7531\u4e8e\u8fd9\u53ea\u662f(1)\u7684\u8bed\u6cd5\u7cd6\uff0c\u540c\u6837\u7684\u8b66\u544a\u9002\u7528\u3002</p>"},{"location":"cookbooks/cookbook/#3-bundle","title":"3. \u5e26\u65b9\u5411\u7684Bundle\u5b57\u6bb5","text":"<p>\u4f60\u4e5f\u53ef\u4ee5\u7528<code>Output(...)</code>\u5305\u88c5\u5b57\u6bb5\uff0c\u8fd9\u4f1a\u521b\u5efa\u4f20\u9012\u53c2\u6570\u7684\u65b0\u5b9e\u4f8b\u3002 Chisel\u5c06<code>Output</code>\u89c6\u4e3a\"\u9ed8\u8ba4\u65b9\u5411\"\uff0c\u6240\u4ee5\u5982\u679c\u6240\u6709\u5b57\u6bb5\u90fd\u662f\u8f93\u51fa\uff0c\u8be5<code>Bundle</code>\u5728\u529f\u80fd\u4e0a\u7b49\u540c\u4e8e\u6ca1\u6709\u65b9\u5411\u5b57\u6bb5\u7684<code>Bundle</code>\u3002</p> <p>```scala mdoc class DirectionedBundleT &lt;: Data extends Bundle {   val foo = Output(gen)   val bar = Output(gen) } <pre><code>```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nchisel3.docs.emitSystemVerilog(new Top(new DirectionedBundle(UInt(8.W))))\n</code></pre></p> <p>\u8fd9\u79cd\u65b9\u6cd5\u8bda\u7136\u6709\u70b9\u4e11\u964b\uff0c\u5e76\u4e14\u53ef\u80fd\u8bef\u5bfc\u5176\u4ed6\u9605\u8bfb\u4ee3\u7801\u7684\u4eba\uff0c\u56e0\u4e3a\u5b83\u6697\u793a\u8fd9\u4e2aBundle\u65e8\u5728\u7528\u4f5c<code>Output</code>\u3002</p>"},{"location":"cookbooks/cookbook/#4-clonetype","title":"4. \u76f4\u63a5\u8c03\u7528<code>.cloneType</code>","text":"<p>\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u4f60\u7684<code>gen</code>\u53c2\u6570\u4e0a\u8c03\u7528<code>.cloneType</code>\u3002 \u867d\u7136\u6211\u4eec\u8bd5\u56fe\u5bf9\u7528\u6237\u9690\u85cf\u8fd9\u4e2a\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f46<code>.cloneType</code>\u662fChisel\u521b\u5efa<code>Data</code>\u5bf9\u8c61\u65b0\u5b9e\u4f8b\u7684\u673a\u5236\uff1a</p> <p>```scala mdoc class UsingCloneTypeBundleT &lt;: Data extends Bundle {   val foo = gen.cloneType   val bar = gen.cloneType } <pre><code>```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nchisel3.docs.emitSystemVerilog(new Top(new UsingCloneTypeBundle(UInt(8.W))))\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_7","title":"\u5982\u4f55\u5904\u7406\"\u65e0\u6cd5\u514b\u9686\"\u9519\u8bef\uff1f","text":"<p>\u5927\u591a\u6570Chisel\u5bf9\u8c61\u9700\u8981\u88ab\u514b\u9686\uff0c\u4ee5\u533a\u5206bundle\u5b57\u6bb5\u7684\u8f6f\u4ef6\u8868\u793a\u548c\u5176\"\u7ed1\u5b9a\"\u7684\u786c\u4ef6 \u8868\u793a\uff0c\u5176\u4e2d\"\u7ed1\u5b9a\"\u662f\u751f\u6210\u786c\u4ef6\u7ec4\u4ef6\u7684\u8fc7\u7a0b\u3002\u5bf9\u4e8eBundle\u5b57\u6bb5\uff0c\u8fd9\u79cd\u514b\u9686\u5e94\u8be5\u901a\u8fc7 \u7f16\u8bd1\u5668\u63d2\u4ef6\u81ea\u52a8\u53d1\u751f\u3002</p> <p>\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u63d2\u4ef6\u53ef\u80fd\u65e0\u6cd5\u514b\u9686Bundle\u5b57\u6bb5\u3002\u5f53\u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u65f6\uff0c \u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5f53Bundle\u5b57\u6bb5\u7684<code>chisel3.Data</code>\u90e8\u5206\u5d4c\u5957\u5728\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u4e2d\uff0c \u7f16\u8bd1\u5668\u63d2\u4ef6\u65e0\u6cd5\u5f04\u6e05\u695a\u5982\u4f55\u514b\u9686\u6574\u4e2a\u7ed3\u6784\u3002\u6700\u597d\u907f\u514d\u8fd9\u79cd\u5d4c\u5957\u7ed3\u6784\u3002</p> <p>\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u6709\u51e0\u79cd\u65b9\u6cd5 - \u5982\u679c\u9002\u5f53\uff0c\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u7528Input(...)\u3001Output(...)\u6216Flipped(...)\u5305\u88c5 \u6709\u95ee\u9898\u7684\u5b57\u6bb5\u3002\u4f60\u4e5f\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528<code>chisel3.reflect.DataMirror</code>\u4e2d\u7684<code>chiselTypeClone</code>\u65b9\u6cd5 \u624b\u52a8\u514b\u9686Bundle\u4e2d\u7684\u6bcf\u4e2a\u5b57\u6bb5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2aBundle\u7684\u4f8b\u5b50\uff0c\u5176\u5b57\u6bb5\u4e0d\u4f1a\u88ab\u514b\u9686\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nimport chisel3._\nimport scala.collection.immutable.ListMap\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\nclass CustomBundleBroken(elts: (String, Data)*) extends Record {\n  val elements = ListMap(elts: _*)\n\n  def apply(elt: String): Data = elements(elt)\n}\n\nclass NewModule extends Module {\n  val out = Output(UInt(8.W))\n  val recordType = new CustomBundleBroken(\"fizz\" -&gt; UInt(16.W), \"buzz\" -&gt; UInt(16.W))\n  val record = Wire(recordType)\n  val uint = record.asUInt\n  val record2 = uint.asTypeOf(recordType)\n  out := record\n}\ngetVerilogString(new NewModule)\n</code></pre> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528<code>chiselTypeClone</code>\u6765\u514b\u9686\u5143\u7d20\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <p>```scala mdoc import chisel3.reflect.DataMirror import chisel3.experimental.requireIsChiselType</p> <p>class CustomBundleFixed(elts: (String, Data)) extends Record {   val elements = ListMap(elts.map {     case (field, elt) =&gt;       requireIsChiselType(elt)       field -&gt; DataMirror.internal.chiselTypeClone(elt)   }: _)</p> <p>def apply(elt: String): Data = elements(elt) } <pre><code>## \u5982\u4f55\u521b\u5efa\u6709\u9650\u72b6\u6001\u673a(FSM)\uff1f\n\n\u5efa\u8bae\u7684\u65b9\u6cd5\u662f\u4f7f\u7528`ChiselEnum`\u6784\u9020\u8868\u793aFSM\u72b6\u6001\u7684\u679a\u4e3e\u7c7b\u578b\u3002\n\u7136\u540e\u7528`switch`/`is`\u548c`when`/`.elsewhen`/`.otherwise`\u5904\u7406\u72b6\u6001\u8f6c\u6362\u3002\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.util.{switch, is}\n\nobject DetectTwoOnes {\n  object State extends ChiselEnum {\n    val sNone, sOne1, sTwo1s = Value\n  }\n}\n\n/* \u8fd9\u4e2aFSM\u68c0\u6d4b\u4e24\u4e2a\u8fde\u7eed\u76841 */\nclass DetectTwoOnes extends Module {\n  import DetectTwoOnes.State\n  import DetectTwoOnes.State._\n\n  val io = IO(new Bundle {\n    val in = Input(Bool())\n    val out = Output(Bool())\n    val state = Output(State())\n  })\n\n  val state = RegInit(sNone)\n\n  io.out := (state === sTwo1s)\n  io.state := state\n\n  switch (state) {\n    is (sNone) {\n      when (io.in) {\n        state := sOne1\n      }\n    }\n    is (sOne1) {\n      when (io.in) {\n        state := sTwo1s\n      } .otherwise {\n        state := sNone\n      }\n    }\n    is (sTwo1s) {\n      when (!io.in) {\n        state := sNone\n      }\n    }\n  }\n}\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new DetectTwoOnes)\n</code></pre> <p>\u6ce8\u610f\uff1a<code>is</code>\u8bed\u53e5\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u6761\u4ef6\uff0c\u4f8b\u5982<code>is (sTwo1s, sOne1) { ... }</code>\u3002</p>"},{"location":"cookbooks/cookbook/#verilog","title":"\u5982\u4f55\u50cf\u5728Verilog\u4e2d\u90a3\u6837\u89e3\u5305\u503c\uff08\"\u53cd\u5411\u8fde\u63a5\"\uff09\uff1f","text":"<p>\u5728Verilog\u4e2d\uff0c\u4f60\u53ef\u4ee5\u505a\u7c7b\u4f3c\u4e0b\u9762\u7684\u64cd\u4f5c\u6765\u89e3\u5305\u503c<code>z</code>\uff1a</p> <pre><code>wire [1:0] a;\nwire [3:0] b;\nwire [2:0] c;\nwire [8:0] z = [...];\nassign {a,b,c} = z;\n</code></pre> <p>\u89e3\u5305\u901a\u5e38\u5bf9\u5e94\u4e8e\u5c06\u975e\u7ed3\u6784\u5316\u6570\u636e\u7c7b\u578b\u91cd\u65b0\u89e3\u91ca\u4e3a\u7ed3\u6784\u5316\u6570\u636e\u7c7b\u578b\u3002 \u901a\u5e38\uff0c\u8fd9\u79cd\u7ed3\u6784\u5316\u7c7b\u578b\u5728\u8bbe\u8ba1\u4e2d\u5e7f\u6cdb\u4f7f\u7528\uff0c\u5e76\u5df2\u7ecf\u5982\u4e0b\u4f8b\u4e2d\u6240\u793a\u8fdb\u884c\u4e86\u58f0\u660e\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val a = UInt(2.W)\n  val b = UInt(4.W)\n  val c = UInt(3.W)\n}\n</code></pre> <p>\u5728Chisel\u4e2d\u5b9e\u73b0\u8fd9\u4e00\u70b9\u7684\u6700\u7b80\u5355\u65b9\u6cd5\u662f\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass Foo extends Module {\n  val z = Wire(UInt(9.W))\n  z := DontCare // \u8fd9\u662f\u4e00\u4e2a\u865a\u62df\u8fde\u63a5\n  val unpacked = z.asTypeOf(new MyBundle)\n  printf(\"%d\", unpacked.a)\n  printf(\"%d\", unpacked.b)\n  printf(\"%d\", unpacked.c)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre> <p>\u5982\u679c\u4f60\u771f\u7684\u9700\u8981\u4e3a\u4e00\u6b21\u6027\u60c5\u51b5\u505a\u8fd9\u4e2a\uff08\u4e09\u601d\u800c\u540e\u884c\uff01\u4f60\u5f88\u53ef\u80fd\u53ef\u4ee5\u4f7f\u7528bundle\u66f4\u597d\u5730\u6784\u9020\u4ee3\u7801\uff09\uff0c\u90a3\u4e48rocket-chip\u6709\u4e00\u4e2aSplit\u5de5\u5177\u53ef\u4ee5\u5b8c\u6210\u8fd9\u4e2a\u3002</p>"},{"location":"cookbooks/cookbook/#uint","title":"\u5982\u4f55\u8fdb\u884c\u5b50\u5b57\u8d4b\u503c\uff08\u4e3aUInt\u4e2d\u7684\u67d0\u4e9b\u4f4d\u8d4b\u503c\uff09\uff1f","text":"<p>\u4f60\u53ef\u80fd\u5c1d\u8bd5\u505a\u7c7b\u4f3c\u4ee5\u4e0b\u7684\u4e8b\u60c5\uff0c\u4f60\u60f3\u53ea\u4e3aChisel\u7c7b\u578b\u7684\u67d0\u4e9b\u4f4d\u8d4b\u503c\u3002 \u4e0b\u9762\uff0c\u5bf9<code>io.out(0)</code>\u7684\u5de6\u4fa7\u8fde\u63a5\u662f\u4e0d\u5141\u8bb8\u7684\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val io = IO(new Bundle {\n    val bit = Input(Bool())\n    val out = Output(UInt(10.W))\n  })\n  io.out(0) := io.bit\n}\n</code></pre> <p>\u5982\u679c\u4f60\u5c1d\u8bd5\u7f16\u8bd1\u8fd9\u4e2a\uff0c\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u3002 <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\ngetVerilogString(new Foo)\n</code></pre></p> <p>Chisel3 \u4e0d\u652f\u6301\u5b50\u5b57\u8d4b\u503c\u3002 \u8fd9\u662f\u56e0\u4e3a\u5b50\u5b57\u8d4b\u503c\u901a\u5e38\u6697\u793a\u53ef\u4ee5\u4f7f\u7528\u805a\u5408/\u7ed3\u6784\u5316\u7c7b\u578b\u8fdb\u884c\u66f4\u597d\u7684\u62bd\u8c61\uff0c\u5373\uff0c<code>Bundle</code>\u6216<code>Vec</code>\u3002</p> <p>\u5982\u679c\u4f60\u5fc5\u987b\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8868\u8fbe\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u5c06\u4f60\u7684<code>UInt</code>\u5206\u89e3\u4e3a<code>Bool</code>\u7684<code>Vec</code>\uff0c\u7136\u540e\u518d\u8f6c\u56de\u6765\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val io = IO(new Bundle {\n    val in = Input(UInt(10.W))\n    val bit = Input(Bool())\n    val out = Output(UInt(10.W))\n  })\n  val bools = VecInit(io.in.asBools)\n  bools(0) := io.bit\n  io.out := bools.asUInt\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre>"},{"location":"cookbooks/cookbook/#io","title":"\u5982\u4f55\u521b\u5efa\u53ef\u9009\u7684I/O\uff1f","text":"<p>\u4ee5\u4e0b\u793a\u4f8b\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u53ea\u6709\u5f53\u7ed9\u5b9a\u53c2\u6570\u4e3a<code>true</code>\u65f6\u624d\u5305\u542b\u53ef\u9009\u7aef\u53e3<code>out2</code>\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass ModuleWithOptionalIOs(flag: Boolean) extends Module {\n  val io = IO(new Bundle {\n    val in = Input(UInt(12.W))\n    val out = Output(UInt(12.W))\n    val out2 = if (flag) Some(Output(UInt(12.W))) else None\n  })\n\n  io.out := io.in\n  if (flag) {\n    io.out2.get := io.in\n  }\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new ModuleWithOptionalIOs(true))\n</code></pre> <p>\u4ee5\u4e0b\u662f\u4e00\u4e2a\u6574\u4e2a<code>IO</code>\u662f\u53ef\u9009\u7684\u793a\u4f8b\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass ModuleWithOptionalIO(flag: Boolean) extends Module {\n  val in = if (flag) Some(IO(Input(Bool()))) else None\n  val out = IO(Output(Bool()))\n\n  out := in.getOrElse(false.B)\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new ModuleWithOptionalIO(true))\n</code></pre>"},{"location":"cookbooks/cookbook/#io_1","title":"\u5982\u4f55\u521b\u5efa\u6ca1\u6709\u524d\u7f00\u7684I/O\uff1f","text":"<p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u5730\u591a\u6b21\u8c03\u7528<code>IO</code>\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyModule extends Module {\n  val in = IO(Input(UInt(8.W)))\n  val out = IO(Output(UInt(8.W)))\n\n  out := in +% 1.U\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre> <p>\u5982\u679c\u4f60\u6709\u4e00\u4e2a<code>Bundle</code>\uff0c\u4f60\u60f3\u4ece\u4e2d\u521b\u5efa\u6ca1\u6709\u6b63\u5e38<code>val</code>\u524d\u7f00\u7684\u7aef\u53e3\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>FlatIO</code>\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass MyBundle extends Bundle {\n  val foo = Input(UInt(8.W))\n  val bar = Output(UInt(8.W))\n}\n\nclass MyModule extends Module {\n  val io = FlatIO(new MyBundle)\n\n  io.bar := io.foo +% 1.U\n}\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u6ca1\u6709\u770b\u5230<code>io_</code>\uff01</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre>"},{"location":"cookbooks/cookbook/#module","title":"\u5982\u4f55\u5728Module\u5185\u8986\u76d6\u9690\u5f0f\u65f6\u949f\u6216\u590d\u4f4d\u4fe1\u53f7\uff1f","text":"<p>\u8981\u66f4\u6539\u4ee3\u7801\u533a\u57df\u7684\u65f6\u949f\u6216\u590d\u4f4d\u4fe1\u53f7\uff0c\u8bf7\u4f7f\u7528<code>withClock</code>\u3001<code>withReset</code>\u6216<code>withClockAndReset</code>\u3002 \u6709\u5173\u793a\u4f8b\u548c\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u591a\u65f6\u949f\u57df\u3002</p> <p>\u8981\u8986\u76d6<code>Module</code>\u6574\u4e2a\u4f5c\u7528\u57df\u7684\u65f6\u949f\u6216\u590d\u4f4d\u4fe1\u53f7\uff0c\u4f60\u53ef\u4ee5\u6df7\u5165<code>ImplicitClock</code>\u548c<code>ImplicitReset</code>\u7279\u8d28\u3002</p> <p>\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5982\u4e0b\"\u95e8\u63a7\"\u9ed8\u8ba4\u9690\u5f0f\u65f6\u949f\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nclass MyModule extends Module with ImplicitClock {\n  val gate = IO(Input(Bool()))\n  val in = IO(Input(UInt(8.W)))\n  val out = IO(Output(UInt(8.W)))\n  // \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u5206\u914d\u7ed9val implicitClock\uff0c\u4f46\u8fd9\u6837\u53ef\u4ee5\u8ba9\u6211\u4eec\u7ed9\u5b83\u4e00\u4e2a\u81ea\u5b9a\u4e49\u540d\u79f0\n  val gatedClock = (clock.asBool || gate).asClock\n  // \u8be5\u7279\u8d28\u8981\u6c42\u6211\u4eec\u5b9e\u73b0\u8fd9\u4e2a\u5f15\u7528\u65f6\u949f\u7684\u65b9\u6cd5\n  // \u6ce8\u610f\u8fd9\u662f\u4e00\u4e2adef\uff0c\u4f46\u5b9e\u9645\u7684\u65f6\u949f\u503c\u5fc5\u987b\u5206\u914d\u7ed9\u4e00\u4e2aval\n  override protected def implicitClock = gatedClock\n\n  val r = Reg(UInt(8.W))\n  out := r\n  r := in\n}\n</code></pre> <p>\u8fd9\u4f1a\u751f\u6210\u4ee5\u4e0bVerilog\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre> <p>\u5982\u679c\u4f60\u4e0d\u5173\u5fc3\u8986\u76d6\u65f6\u949f\u7684\u540d\u79f0\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u5206\u914d\u7ed9<code>val implicitClock</code>\uff1a <pre><code>override protected val implicitClock = (clock.asBool || gate).asClock\n</code></pre></p> <p><code>ImplicitReset</code>\u7684\u5de5\u4f5c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e<code>ImplicitClock</code>\u3002</p>"},{"location":"cookbooks/cookbook/#_8","title":"\u5982\u4f55\u6700\u5c0f\u5316\u8f93\u51fa\u5411\u91cf\u4e2d\u4f7f\u7528\u7684\u4f4d\u6570\uff1f","text":"<p>\u4f7f\u7528\u63a8\u65ad\u5bbd\u5ea6\u548c<code>Seq</code>\u800c\u4e0d\u662f<code>Vec</code>\uff1a</p> <p>\u8003\u8651\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\n// \u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u4f4d\u7f6e\u53ca\u4e4b\u524d\u7684\u7f6e\u4f4d\u6570\nclass CountBits(width: Int) extends Module {\n  val bits = IO(Input(UInt(width.W)))\n  val countVector = IO(Output(Vec(width, UInt())))\n\n  private val countSequence = Seq.tabulate(width)(i =&gt; Wire(UInt()))\n  countSequence.zipWithIndex.foreach { case (port, i) =&gt;\n    port := util.PopCount(bits(i, 0))\n  }\n  countVector := countSequence\n}\n\nclass Top(width: Int) extends Module {\n  val countBits = Module(new CountBits(width))\n  countBits.bits :&lt;&gt;= DontCare\n  dontTouch(countBits.bits)\n  dontTouch(countBits.countVector)\n}\n</code></pre> <p>\u6ce8\u610f\uff0c\u9876\u5c42\u6a21\u5757\u6216\u516c\u5171\u6a21\u5757\u4e0d\u80fd\u6709\u672a\u77e5\u5bbd\u5ea6\u3002</p> <p>\u4e0e<code>Vecs</code>\u8868\u793a\u5355\u4e00\u7684Chisel\u7c7b\u578b\u4e14\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u5177\u6709\u76f8\u540c\u5bbd\u5ea6\u4e0d\u540c\uff0c \u4e0e<code>Vecs</code>\u8868\u793a\u5355\u4e00\u7684Chisel\u7c7b\u578b\u4e14\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u5177\u6709\u76f8\u540c\u5bbd\u5ea6\u4e0d\u540c\uff0c <code>Seq</code>\u662f\u7eafScala\u6784\u9020\uff0c\u56e0\u6b64\u4eceChisel\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u5b83\u4eec\u7684\u5143\u7d20\u662f\u72ec\u7acb\u7684\uff0c\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u5bbd\u5ea6\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new Top(4))\n  // \u901a\u8fc7\u5220\u9664');'\u4e4b\u540e\u7684\u6240\u6709\u5185\u5bb9\u6765\u5220\u9664\u6a21\u5757\u7684\u4e3b\u4f53\n  .split(\"\\\\);\")\n  .head + \");\\n\"\n</code></pre>"},{"location":"cookbooks/cookbook/#_9","title":"\u5982\u4f55\u89e3\u51b3\"\u52a8\u6001\u7d22\u5f15...\u5bf9\u4e8e\u88ab\u63d0\u53d6\u8005\u6765\u8bf4\u592a\u5bbd/\u592a\u7a84...\"\uff1f","text":"<p>\u5f53\u52a8\u6001\u7d22\u5f15\u7684\u5bbd\u5ea6\u4e0d\u662f\u7d22\u5f15Vec\u6216UInt\u7684\u6b63\u786e\u5927\u5c0f\u65f6\uff0cChisel\u4f1a\u53d1\u51fa\u8b66\u544a\u3002 \"\u6b63\u786e\u5927\u5c0f\"\u610f\u5473\u7740\u7d22\u5f15\u7684\u5bbd\u5ea6\u5e94\u8be5\u662f\u88ab\u7d22\u5f15\u8005\u5927\u5c0f\u7684log2\u3002 \u5982\u679c\u88ab\u7d22\u5f15\u8005\u7684\u5927\u5c0f\u4e0d\u662f2\u7684\u5e42\uff0c\u5219\u4f7f\u7528log2\u7ed3\u679c\u7684\u4e0a\u9650\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible:reset\nimport chisel3._\n// \u8f85\u52a9\u51fd\u6570\uff0c\u4e22\u5f03\u8fd4\u56de\u503c\uff0c\u4f7f\u5176\u4e0d\u663e\u793a\u5728mdoc\u4e2d\ndef compile(gen: =&gt; chisel3.RawModule): Unit = {\n  circt.stage.ChiselStage.emitCHIRRTL(gen)\n}\n</code></pre> <p>\u5f53\u7d22\u5f15\u6ca1\u6709\u8db3\u591f\u7684\u4f4d\u6765\u5bfb\u5740\u88ab\u63d0\u53d6\u8005\u4e2d\u7684\u6240\u6709\u6761\u76ee\u6216\u4f4d\u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528<code>.pad</code>\u589e\u52a0\u7d22\u5f15\u7684\u5bbd\u5ea6\u3002</p> <p>```scala mdoc class TooNarrow extends RawModule {   val extractee = Wire(UInt(7.W))   val index = Wire(UInt(2.W))   extractee(index) } compile(new TooNarrow) <pre><code>\u8fd9\u53ef\u4ee5\u7528`pad`\u4fee\u590d\uff1a\n\n```scala mdoc\nclass TooNarrowFixed extends RawModule {\n  val extractee = Wire(UInt(7.W))\n  val index = Wire(UInt(2.W))\n  extractee(index.pad(3))\n}\ncompile(new TooNarrowFixed)\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_10","title":"\u5f53\u7d22\u5f15\u592a\u5bbd\u65f6\u4f7f\u7528\u4f4d\u63d0\u53d6","text":"<p>```scala mdoc class TooWide extends RawModule {   val extractee = Wire(Vec(8, UInt(32.W)))   val index = Wire(UInt(4.W))   extractee(index) } compile(new TooWide) <pre><code>\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f4d\u63d0\u53d6\u4fee\u590d\uff1a\n\n```scala mdoc\nclass TooWideFixed extends RawModule {\n  val extractee = Wire(Vec(8, UInt(32.W)))\n  val index = Wire(UInt(4.W))\n  extractee(index(2, 0))\n}\ncompile(new TooWideFixed)\n</code></pre></p> <p>\u6ce8\u610f\uff0c\u5927\u5c0f\u4e3a1\u7684<code>Vecs</code>\u548c<code>UInts</code>\u5e94\u8be5\u7531\u96f6\u5bbd\u5ea6\u7684<code>UInt</code>\u7d22\u5f15\uff1a</p> <p>```scala mdoc class SizeOneVec extends RawModule {   val extractee = Wire(Vec(1, UInt(32.W)))   val index = Wire(UInt(0.W))   extractee(index) } compile(new SizeOneVec) <pre><code>\u56e0\u4e3a`pad`\u53ea\u5728\u6240\u9700\u5bbd\u5ea6\u5c0f\u4e8e\u53c2\u6570\u5f53\u524d\u5bbd\u5ea6\u65f6\u624d\u8fdb\u884c\u586b\u5145\uff0c\n\u4f60\u53ef\u4ee5\u5728\u5bbd\u5ea6\u53ef\u80fd\u5728\u4e0d\u540c\u60c5\u51b5\u4e0b\u592a\u5bbd\u6216\u592a\u7a84\u65f6\u5c06`pad`\u4e0e\u4f4d\u63d0\u53d6\u7ed3\u5408\u4f7f\u7528\n\n```scala mdoc\nimport chisel3.util.log2Ceil\nclass TooWideOrNarrow(extracteeSize: Int, indexWidth: Int) extends Module {\n  val extractee = Wire(Vec(extracteeSize, UInt(8.W)))\n  val index = Wire(UInt(indexWidth.W))\n  val correctWidth = log2Ceil(extracteeSize)\n  extractee(index.pad(correctWidth)(correctWidth - 1, 0))\n}\ncompile(new TooWideOrNarrow(8, 2))\ncompile(new TooWideOrNarrow(8, 4))\n</code></pre></p> <p>\u5bf9\u4e8e<code>UInts</code>\u7684\u52a8\u6001\u4f4d\u9009\u62e9\uff08\u4f46\u4e0d\u662f<code>Vec</code>\u7684\u52a8\u6001\u7d22\u5f15\uff09\uff0c\u53e6\u4e00\u79cd\u9009\u62e9\u662f\u5bf9\u88ab\u63d0\u53d6\u8005\u8fdb\u884c\u52a8\u6001 \u53f3\u79fb\uff0c\u7136\u540e\u53ea\u9009\u62e9\u5355\u4e2a\u4f4d\uff1a ```scala mdoc class TooWideOrNarrowUInt(extracteeSize: Int, indexWidth: Int) extends Module {   val extractee = Wire(UInt(extracteeSize.W))   val index = Wire(UInt(indexWidth.W))   (extractee &gt;&gt; index)(0) } compile(new TooWideOrNarrowUInt(8, 2)) compile(new TooWideOrNarrowUInt(8, 4)) <pre><code>## \u5982\u4f55\u5728Chisel\u4e2d\u4f7f\u7528Verilog\u7684\"case\u76f8\u7b49\"\u8fd0\u7b97\u7b26\uff1f\n\nVerilog\u6709\"case\u76f8\u7b49\"\uff08`===`\uff09\u548c\"\u4e0d\u7b49\"\uff08`!==`\uff09\u8fd0\u7b97\u7b26\u3002\n\u5b83\u4eec\u901a\u5e38\u7528\u4e8e\u5728\u65ad\u8a00\u4e2d\u5ffd\u7565\u672a\u77e5\uff08`X`\uff09\u503c\u3002\n\nChisel\u4e0d\u76f4\u63a5\u652f\u6301Verilog\u7684`X`\uff0c\u4f46\u53ef\u4ee5\u4f7f\u7528`chisel3.util.circt.isX`\u68c0\u67e5\u503c\u662f\u5426\u4e3a`X`\u3002\n`isX`\u901a\u5e38\u7528\u4e8e\u4fdd\u62a4\u65ad\u8a00\u514d\u53d7`X`\u7684\u5f71\u54cd\uff0c\u8fd9\u4e0eVerilog\u7684case\u76f8\u7b49\u884c\u4e3a\u7c7b\u4f3c\u3002\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.util.circt.IsX\n\nclass AssertButAllowX extends Module {\n  val in = IO(Input(UInt(8.W)))\n\n  // \u65ad\u8a00in\u6c38\u8fdc\u4e0d\u4e3a\u96f6\uff1b\u4e5f\u4e0d\u5728X\u51fa\u73b0\u65f6\u89e6\u53d1\u65ad\u8a00\u3002\n  assert(IsX(in) || in =/= 0.U, \"in should never equal 0\")\n}\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// Hidden but will make sure this actually compiles\nchisel3.docs.emitSystemVerilog(new AssertButAllowX)\n</code></pre>"},{"location":"cookbooks/cookbook/#_11","title":"\u53ef\u9884\u6d4b\u7684\u547d\u540d","text":""},{"location":"cookbooks/cookbook/#chiselwhenwithclockandreset","title":"\u5982\u4f55\u4f7fChisel\u5728when/withClockAndReset\u7b49\u5757\u4e2d\u6b63\u786e\u547d\u540d\u4fe1\u53f7\uff1f","text":"<p>\u4f7f\u7528\u7f16\u8bd1\u5668\u63d2\u4ef6\uff0c\u5982\u679c\u4ecd\u7136\u4e0d\u80fd\u8fbe\u5230\u4f60\u60f3\u8981\u7684\u6548\u679c\uff0c\u8bf7\u67e5\u770b\u547d\u540d\u624b\u518c\u3002</p>"},{"location":"cookbooks/cookbook/#chisel","title":"\u5982\u4f55\u4f7fChisel\u6b63\u786e\u547d\u540d\u5411\u91cf\u8bfb\u53d6\u7684\u7ed3\u679c\uff1f","text":"<p>\u76ee\u524d\uff0c\u4f7f\u7528\u52a8\u6001\u7d22\u5f15\u65f6\u4f1a\u4e22\u5931\u540d\u79f0\u4fe1\u606f\u3002\u4f8b\u5982\uff1a <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Foo extends Module {\n  val io = IO(new Bundle {\n    val in = Input(Vec(4, Bool()))\n    val idx = Input(UInt(2.W))\n    val en = Input(Bool())\n    val out = Output(Bool())\n  })\n\n  val x = io.in(io.idx)\n  val y = x &amp;&amp; io.en\n  io.out := y\n}\n</code></pre></p> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4e22\u5931\u4e86<code>x</code>\u540d\u79f0\uff0c\u800c\u662f\u4f7f\u7528<code>_GEN_3</code>\uff08\u5176\u4ed6<code>_GEN_*</code>\u4fe1\u53f7\u662f\u9884\u671f\u7684\uff09\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new Foo)\n</code></pre> <p>\u8fd9\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u7ebf\u7f51\u5e76\u5c06\u52a8\u6001\u7d22\u5f15\u8fde\u63a5\u5230\u8be5\u7ebf\u7f51\u6765\u89e3\u51b3\uff1a <pre><code>val x = WireInit(io.in(io.idx))\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nclass Foo2 extends Module {\n  val io = IO(new Bundle {\n    val in = Input(Vec(4, Bool()))\n    val idx = Input(UInt(2.W))\n    val en = Input(Bool())\n    val out = Output(Bool())\n  })\n\n  val x = WireInit(io.in(io.idx))\n  val y = x &amp;&amp; io.en\n  io.out := y\n}\n</code></pre> <p>\u8fd9\u4f1a\u4ea7\u751f\uff1a <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new Foo2)\n</code></pre></p>"},{"location":"cookbooks/cookbook/#_12","title":"\u5982\u4f55\u52a8\u6001\u8bbe\u7f6e/\u53c2\u6570\u5316\u6a21\u5757\u7684\u540d\u79f0\uff1f","text":"<p>\u4f60\u53ef\u4ee5\u8986\u76d6<code>desiredName</code>\u51fd\u6570\u3002\u8fd9\u9002\u7528\u4e8e\u666e\u901a\u7684Chisel\u6a21\u5757\u548c<code>BlackBox</code>\u3002\u4f8b\u5982\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\n\nclass Coffee extends BlackBox {\n    val io = IO(new Bundle {\n        val I = Input(UInt(32.W))\n        val O = Output(UInt(32.W))\n    })\n    override def desiredName = \"Tea\"\n}\n\nclass Salt extends Module {\n    val io = IO(new Bundle {})\n    val drink = Module(new Coffee)\n    override def desiredName = \"SodiumMonochloride\"\n\n    drink.io.I := 42.U\n}\n</code></pre> <p>\u5bf9Chisel\u6a21\u5757<code>Salt</code>\u8fdb\u884c\u8be6\u7ec6\u5316\u4f1a\u5728\u8f93\u51fa\u7684Verilog\u4e2d\u4ea7\u751f\u6211\u4eec\u4e3a<code>Salt</code>\u548c<code>Coffee</code>\u6240\"\u671f\u671b\u7684\u540d\u79f0\"\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new Salt)\n</code></pre>"},{"location":"cookbooks/cookbook/#_13","title":"\u65b9\u5411\u6027","text":""},{"location":"cookbooks/cookbook/#bundledata","title":"\u5982\u4f55\u4ece\u53cc\u5411Bundle\uff08\u6216\u5176\u4ed6Data\uff09\u4e2d\u53bb\u9664\u65b9\u5411\uff1f","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u53cc\u5411\u7aef\u53e3\uff0c\u5982<code>Decoupled</code>\uff0c\u5982\u679c\u4f60\u5c1d\u8bd5\u5c06\u5176\u76f4\u63a5\u8fde\u63a5\u5230\u5bc4\u5b58\u5668\uff0c\u5c06\u4f1a\u5f97\u5230\u9519\u8bef\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.util.Decoupled\nclass BadRegConnect extends Module {\n  val io = IO(new Bundle {\n    val enq = Decoupled(UInt(8.W))\n  })\n\n  val monitor = Reg(chiselTypeOf(io.enq))\n  monitor := io.enq\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:crash\ngetVerilogString(new BadRegConnect)\n</code></pre> <p>While there is no construct to \"strip direction\" in Chisel3, wrapping a type in <code>Output(...)</code> (the default direction in Chisel3) will set all of the individual elements to output direction. This will have the desired result when used to construct a Register:</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.util.Decoupled\nclass CoercedRegConnect extends Module {\n  val io = IO(new Bundle {\n    val enq = Flipped(Decoupled(UInt(8.W)))\n  })\n\n  // Make a Reg which contains all of the bundle's signals, regardless of their directionality\n  val monitor = Reg(Output(chiselTypeOf(io.enq)))\n  // Even though io.enq is bidirectional, := will drive all fields of monitor with the fields of io.enq\n  monitor := io.enq\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nchisel3.docs.emitSystemVerilog(new CoercedRegConnect {\n  // Provide default connections that would just muddy the example\n  io.enq.ready := true.B\n  // dontTouch so that it shows up in the Verilog\n  dontTouch(monitor)\n})\n</code></pre>"},{"location":"cookbooks/dataview/","title":"DataView\u6280\u5de7\u624b\u518c","text":"<ul> <li>DataView\u6280\u5de7\u624b\u518c<ul> <li>\u5982\u4f55\u5c06Data\u89c6\u4e3aUInt\u6216\u53cd\u4e4b\uff1f</li> <li>\u5982\u4f55\u4e3a\u5177\u6709\u7c7b\u578b\u53c2\u6570\u7684Bundle\u521b\u5efaDataView\uff1f</li> <li>\u5982\u4f55\u4e3a\u5177\u6709\u53ef\u9009\u5b57\u6bb5\u7684Bundle\u521b\u5efaDataView\uff1f</li> <li>\u5982\u4f55\u8fde\u63a5Bundle\u5b57\u6bb5\u7684\u5b50\u96c6\uff1f<ul> <li>\u5982\u4f55\u5c06Bundle\u89c6\u4e3a\u7236\u7c7b\u578b\uff08\u8d85\u7c7b\uff09\uff1f</li> <li>\u5f53\u7236\u7c7b\u578b\u662f\u62bd\u8c61\u7684\uff08\u5982trait\uff09\u65f6\uff0c\u5982\u4f55\u5c06Bundle\u89c6\u4e3a\u7236\u7c7b\u578b\uff1f</li> <li>How can I use .viewAs instead of .viewAsSupertype(type)?</li> </ul> </li> </ul> </li> </ul>"},{"location":"cookbooks/dataview/#datauint","title":"\u5982\u4f55\u5c06Data\u89c6\u4e3aUInt\u6216\u53cd\u4e4b\uff1f","text":"<p>\u5b50\u5b57\u67e5\u770b\uff08\u5728<code>DataViews</code>\u4e2d\u4f7f\u7528\u8fde\u63a5\u6216\u4f4d\u63d0\u53d6\uff09\u76ee\u524d\u5c1a\u4e0d\u652f\u6301\u3002 \u6211\u4eec\u6253\u7b97\u5728\u672a\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\uff0c\u4f46\u76ee\u524d\uff0c\u8bf7\u4f7f\u7528\u5e38\u89c4\u8f6c\u6362 \uff08<code>.asUInt</code>\u548c<code>.asTypeOf</code>\uff09\u3002</p>"},{"location":"cookbooks/dataview/#bundledataview","title":"\u5982\u4f55\u4e3a\u5177\u6709\u7c7b\u578b\u53c2\u6570\u7684Bundle\u521b\u5efaDataView\uff1f","text":"<p>\u4e0d\u8981\u4f7f\u7528<code>val</code>\uff0c\u800c\u662f\u4f7f\u7528\u53ef\u4ee5\u6709\u7c7b\u578b\u53c2\u6570\u7684<code>def</code>\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.dataview._\n\nclass Foo[T &lt;: Data](val foo: T) extends Bundle\nclass Bar[T &lt;: Data](val bar: T) extends Bundle\n\nobject Foo {\n  implicit def view[T &lt;: Data]: DataView[Foo[T], Bar[T]] = {\n    DataView(f =&gt; new Bar(f.foo.cloneType), _.foo -&gt; _.bar)\n    // .cloneType\u662f\u5fc5\u8981\u7684\uff0c\u56e0\u4e3a\u4f20\u9012\u7ed9\u6b64\u51fd\u6570\u7684f\u5c06\u662f\u7ed1\u5b9a\u7684\u786c\u4ef6\n  }\n}\n</code></pre> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// \u786e\u4fdd\u8fd9\u5728\u8be6\u7ec6\u5316\u8fc7\u7a0b\u4e2d\u5de5\u4f5c\uff0c\u975e\u6587\u6863\u90e8\u5206\nclass MyModule extends RawModule {\n  val in = IO(Input(new Foo(UInt(8.W))))\n  val out = IO(Output(new Bar(UInt(8.W))))\n  out := in.viewAs[Bar[UInt]]\n}\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre> \u5982\u679c\u4f60\u5c06\u7c7b\u578b\u53c2\u6570\u5316\u7c7b\u89c6\u4e3a\u4e00\u7cfb\u5217\u4e0d\u540c\u7684\u7c7b\uff08\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u5bf9\u5e94\u4e00\u4e2a\u7c7b\uff09\uff0c \u4f60\u53ef\u4ee5\u5c06<code>implicit def</code>\u89c6\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u53c2\u6570\u7684<code>DataViews</code>\u751f\u6210\u5668\u3002</p>"},{"location":"cookbooks/dataview/#bundledataview_1","title":"\u5982\u4f55\u4e3a\u5177\u6709\u53ef\u9009\u5b57\u6bb5\u7684Bundle\u521b\u5efaDataView\uff1f","text":"<p>\u4e0d\u8981\u4f7f\u7528\u9ed8\u8ba4\u7684<code>DataView</code> apply\u65b9\u6cd5\uff0c\u800c\u662f\u4f7f\u7528<code>DataView.mapping</code>\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.dataview._\n\nclass Foo(val w: Option[Int]) extends Bundle {\n  val foo = UInt(8.W)\n  val opt = w.map(x =&gt; UInt(x.W))\n}\nclass Bar(val w: Option[Int]) extends Bundle {\n  val bar = UInt(8.W)\n  val opt = w.map(x =&gt; UInt(x.W))\n}\n\nobject Foo {\n  implicit val view: DataView[Foo, Bar] =\n    DataView.mapping(\n      // \u7b2c\u4e00\u4e2a\u53c2\u6570\u59cb\u7ec8\u662f\u4ece\u76ee\u6807\u521b\u5efa\u89c6\u56fe\u7684\u51fd\u6570\n      f =&gt; new Bar(f.w),\n      // \u73b0\u5728\uff0c\u4e0d\u662f\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u7684\u5355\u72ec\u6620\u5c04\u5143\u7ec4\uff0c\u800c\u662f\u4e00\u4e2a\u51fd\u6570\n      // \u8be5\u51fd\u6570\u63a5\u53d7\u76ee\u6807\u548c\u89c6\u56fe\u5e76\u8fd4\u56de\u5143\u7ec4\u7684Iterable\n      (f, b) =&gt;  List(f.foo -&gt; b.bar) ++ f.opt.map(_ -&gt; b.opt.get)\n                                   // ^ \u6ce8\u610f\uff0c\u6211\u4eec\u53ef\u4ee5\u9644\u52a0\u9009\u9879\uff0c\u56e0\u4e3a\u5b83\u4eec\u662fIterable\uff01\n\n    )\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\n// \u786e\u4fdd\u8fd9\u5728\u8be6\u7ec6\u5316\u8fc7\u7a0b\u4e2d\u5de5\u4f5c\uff0c\u975e\u6587\u6863\u90e8\u5206\nclass MyModule extends RawModule {\n  val in = IO(Input(new Foo(Some(8))))\n  val out = IO(Output(new Bar(Some(8))))\n  out := in.viewAs[Bar]\n}\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre>"},{"location":"cookbooks/dataview/#bundle","title":"\u5982\u4f55\u8fde\u63a5Bundle\u5b57\u6bb5\u7684\u5b50\u96c6\uff1f","text":"<p>Chisel 3\u8981\u6c42\u8fde\u63a5\u7684\u7c7b\u578b\u5b8c\u5168\u5339\u914d\u3002 DataView\u63d0\u4f9b\u4e86\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e2a<code>Bundle</code>\u5bf9\u8c61\"\u89c6\u4e3a\"\u53e6\u4e00\u4e2a\u7c7b\u578b\uff0c \u8fd9\u5141\u8bb8\u5b83\u4eec\u88ab\u8fde\u63a5\u3002</p>"},{"location":"cookbooks/dataview/#bundle_1","title":"\u5982\u4f55\u5c06Bundle\u89c6\u4e3a\u7236\u7c7b\u578b\uff08\u8d85\u7c7b\uff09\uff1f","text":"<p>\u8981\u5c06<code>Bundles</code>\u89c6\u4e3a\u7236\u7c7b\u578b\uff0c\u53ea\u9700\u4f7f\u7528<code>viewAsSupertype</code>\u5e76\u63d0\u4f9b\u7236\u7c7b\u578b\u7684\u6a21\u677f\u5bf9\u8c61\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.dataview._\n\nclass Foo extends Bundle {\n  val foo = UInt(8.W)\n}\nclass Bar extends Foo {\n  val bar = UInt(8.W)\n}\nclass MyModule extends Module {\n  val foo = IO(Input(new Foo))\n  val bar = IO(Output(new Bar))\n  bar.viewAsSupertype(new Foo) := foo // bar.foo := foo.foo\n  bar.bar := 123.U           // \u6240\u6709\u5b57\u6bb5\u90fd\u9700\u8981\u8fde\u63a5\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre></p>"},{"location":"cookbooks/dataview/#traitbundle","title":"\u5f53\u7236\u7c7b\u578b\u662f\u62bd\u8c61\u7684\uff08\u5982trait\uff09\u65f6\uff0c\u5982\u4f55\u5c06Bundle\u89c6\u4e3a\u7236\u7c7b\u578b\uff1f","text":"<p>\u7ed9\u5b9a\u4ee5\u4e0b\u5171\u4eab\u516c\u5171<code>trait</code>\u7684<code>Bundles</code>\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.dataview._\n\ntrait Super extends Bundle {\n  def bitwidth: Int\n  val a = UInt(bitwidth.W)\n}\nclass Foo(val bitwidth: Int) extends Super {\n  val foo = UInt(8.W)\n}\nclass Bar(val bitwidth: Int) extends Super {\n  val bar = UInt(8.W)\n}\n</code></pre> <p><code>Foo</code>\u548c<code>Bar</code>\u4e0d\u80fd\u76f4\u63a5\u8fde\u63a5\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b83\u4eec\u90fd\u89c6\u4e3a\u5176\u5171\u540c\u8d85\u7c7b\u578b<code>Super</code>\u7684\u5b9e\u4f8b\u6765\u8fde\u63a5\u3002 \u76f4\u63a5\u7684\u65b9\u6cd5\u53ef\u80fd\u4f1a\u9047\u5230\u4ee5\u4e0b\u95ee\u9898\uff1a</p> <p><code>``scala mdoc:fail class MyModule extends Module {   val foo = IO(Input(new Foo(8)))   val bar = IO(Output(new Bar(8)))   bar.viewAsSupertype(new Super) := foo.viewAsSupertype(new Super) } <pre><code>\u95ee\u9898\u662f`viewAs`\u9700\u8981\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u7c7b\u578b\u6a21\u677f\uff08\u4ee5\u4fbf\u53ef\u4ee5\u514b\u9686\u5b83\uff09\uff0c\n\u4f46\u662f`traits`\u662f\u62bd\u8c61\u7684\uff0c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\u3002\n\u89e3\u51b3\u65b9\u6848\u662f\u521b\u5efa\u4e00\u4e2a_\u533f\u540d\u7c7b_\u7684\u5b9e\u4f8b\uff0c\u5e76\u5c06\u8be5\u5bf9\u8c61\u7528\u4f5c`viewAs`\u7684\u53c2\u6570\u3002\n\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass MyModule extends Module {\n  val foo = IO(Input(new Foo(8)))\n  val bar = IO(Output(new Bar(8)))\n  val tpe = new Super { // \u6dfb\u52a0\u82b1\u62ec\u53f7\u521b\u5efa\u4e00\u4e2a\u533f\u540d\u7c7b\n    def bitwidth = 8 // We must implement any abstract methods\n  }\n  bar.viewAsSupertype(tpe) := foo.viewAsSupertype(tpe)\n}\n</code></pre> By adding curly braces after the name of the trait, we're telling Scala to create a new concrete subclass of the trait, and create an instance of it. As indicated in the comment, abstract methods must still be implemented. This is the same that happens when one writes</code>new Bundle {}<code>, the curly braces create a new concrete subclass; however, because</code>Bundle` has no abstract methods, the contents of the body can be empty.</p>"},{"location":"cookbooks/dataview/#how-can-i-use-viewas-instead-of-viewassupertypetype","title":"How can I use <code>.viewAs</code> instead of <code>.viewAsSupertype(type)</code>?","text":"<p>While <code>viewAsSupertype</code> is helpful for one-off casts, the need to provide a type template object each time can be onerous. Because of the subtyping relationship, you can use <code>PartialDataView.supertype</code> to create a <code>DataView</code> from a Bundle type to a parent type by just providing the function to construct an instance of the parent type from an instance of the child type. The mapping of corresponding fields is automatically determined by Chisel to be the fields defined in the supertype.</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.dataview._\n\nclass Foo(x: Int) extends Bundle {\n  val foo = UInt(x.W)\n}\nclass Bar(val x: Int) extends Foo(x) {\n  val bar = UInt(x.W)\n}\n// Define a DataView without having to specify the mapping!\nimplicit val view: DataView[Bar, Foo] = PartialDataView.supertype[Bar, Foo](b =&gt; new Foo(b.x))\n\nclass MyModule extends Module {\n  val foo = IO(Input(new Foo(8)))\n  val bar = IO(Output(new Bar(8)))\n  bar.viewAs[Foo] := foo // bar.foo := foo.foo\n  bar.bar := 123.U       // all fields need to be connected\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new MyModule)\n</code></pre></p>"},{"location":"cookbooks/hierarchy/","title":"\u5c42\u6b21\u7ed3\u6784\u624b\u518c","text":"<ul> <li>\u5c42\u6b21\u7ed3\u6784\u624b\u518c<ul> <li>\u5982\u4f55\u5b9e\u4f8b\u5316\u5177\u6709\u76f8\u540c\u6a21\u5757\u53c2\u6570\u5316\u7684\u591a\u4e2a\u5b9e\u4f8b\uff1f<ul> <li>\u4f7f\u7528Definition\u548cInstance</li> <li>\u4f7f\u7528Instantiate</li> </ul> </li> <li>\u5982\u4f55\u8bbf\u95ee\u5b9e\u4f8b\u7684\u5185\u90e8\u5b57\u6bb5\uff1f</li> <li>\u5982\u4f55\u4f7f\u6211\u7684\u5b57\u6bb5\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f</li> <li>\u5982\u4f55\u4f7f\u5177\u6709\u5927\u91cf\u5b57\u6bb5\u7684case\u7c7b\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f</li> <li>\u5982\u4f55\u901a\u8fc7\u5176\u5b50\u5b9e\u4f8b\u53c2\u6570\u5316\u6a21\u5757\uff1f</li> <li>\u5982\u4f55\u4f7f\u7528\u65b0\u7684\u5c42\u6b21\u7ed3\u6784\u7279\u5b9a\u7684Select\u51fd\u6570\uff1f</li> </ul> </li> </ul>"},{"location":"cookbooks/hierarchy/#_2","title":"\u5982\u4f55\u5b9e\u4f8b\u5316\u5177\u6709\u76f8\u540c\u6a21\u5757\u53c2\u6570\u5316\u7684\u591a\u4e2a\u5b9e\u4f8b\uff1f","text":"<p>\u5728\u6b64\u5305\u53d1\u5e03\u4e4b\u524d\uff0cChisel\u7528\u6237\u4f9d\u8d56FIRRTL\u7f16\u8bd1\u5668\u4e2d\u7684\u53bb\u91cd\u529f\u80fd\u6765\u5c06\u7ed3\u6784\u76f8\u540c\u7684\u6a21\u5757\u5408\u5e76\u4e3a\u4e00\u4e2a\u6a21\u5757\uff08\u5373\"\u53bb\u91cd\"\uff09\u3002 \u8fd9\u4e2a\u5305\u5f15\u5165\u4e86\u4ee5\u4e0b\u65b0\u7684API\uff0c\u4ee5\u4fbf\u76f4\u63a5\u5728Chisel\u4e2d\u542f\u7528\u591a\u91cd\u5b9e\u4f8b\u5316\u6a21\u5757\u3002</p> <p><code>Definition(...)</code>\u5141\u8bb8\u8be6\u7ec6\u8bf4\u660e\u4e00\u4e2a\u6a21\u5757\uff0c\u4f46\u5b9e\u9645\u4e0a\u5e76\u4e0d\u5b9e\u4f8b\u5316\u8be5\u6a21\u5757\u3002 \u76f8\u53cd\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u8be5\u6a21\u5757\u5b9a\u4e49\u7684<code>Definition</code>\u7c7b\u3002</p> <p><code>Instance(...)</code>\u63a5\u53d7\u4e00\u4e2a<code>Definition</code>\u5e76\u5c06\u5176\u5b9e\u4f8b\u5316\uff0c\u8fd4\u56de\u4e00\u4e2a<code>Instance</code>\u5bf9\u8c61\u3002</p> <p><code>Instantiate(...)</code>\u63d0\u4f9b\u4e86\u4e0e<code>Module(...)</code>\u7c7b\u4f3c\u7684API\uff0c\u4f46\u5b83\u4f7f\u7528 <code>Definition</code>\u548c<code>Instance</code>\u6765\u4e3a\u7ed9\u5b9a\u7684\u53c2\u6570\u96c6\u53ea\u8be6\u7ec6\u8bf4\u660e\u4e00\u6b21\u6a21\u5757\u3002 \u5b83\u8fd4\u56de\u4e00\u4e2a<code>Instance</code>\u5bf9\u8c61\u3002</p> <p>\u5c06\u4e0e<code>Definition</code>/<code>Instance</code> API\u4e00\u8d77\u4f7f\u7528\u7684\u6a21\u5757\uff08\u7c7b\u6216\u7279\u8d28\uff09\u5e94\u5728\u7c7b/\u7279\u8d28\u5b9a\u4e49\u5904\u6807\u8bb0 \u4e3a<code>@instantiable</code>\u6ce8\u89e3\u3002</p> <p>\u8981\u4f7f\u6a21\u5757\u7684\u6210\u5458\u53d8\u91cf\u53ef\u4ece<code>Instance</code>\u5bf9\u8c61\u8bbf\u95ee\uff0c\u5b83\u4eec\u5fc5\u987b\u7528<code>@public</code>\u6ce8\u89e3\u6807\u8bb0\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u53ea\u80fd\u4eceScala\u7684\u89d2\u5ea6\u8bbf\u95ee - \u5b83\u672c\u8eab\u4e0d\u662f\u8de8\u6a21\u5757\u5f15\u7528\u7684\u673a\u5236\u3002</p>"},{"location":"cookbooks/hierarchy/#definitioninstance","title":"\u4f7f\u7528Definition\u548cInstance","text":"<p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u4f7f\u7528<code>Definition</code>\u3001<code>Instance</code>\u3001<code>@instantiable</code>\u548c<code>@public</code>\u6765\u521b\u5efa \u4e00\u4e2a\u6a21\u5757<code>AddOne</code>\u7684\u7279\u5b9a\u53c2\u6570\u5316\u7684\u591a\u4e2a\u5b9e\u4f8b\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, instantiable, public}\n\n@instantiable\nclass AddOne(width: Int) extends Module {\n  @public val in  = IO(Input(UInt(width.W)))\n  @public val out = IO(Output(UInt(width.W)))\n  out := in + 1.U\n}\n\nclass AddTwo(width: Int) extends Module {\n  val in  = IO(Input(UInt(width.W)))\n  val out = IO(Output(UInt(width.W)))\n  val addOneDef = Definition(new AddOne(width))\n  val i0 = Instance(addOneDef)\n  val i1 = Instance(addOneDef)\n  i0.in := in\n  i1.in := i0.out\n  out   := i1.out\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new AddTwo(10))\n</code></pre></p>"},{"location":"cookbooks/hierarchy/#instantiate","title":"\u4f7f\u7528Instantiate","text":"<p>\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff0c\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528<code>Instantiate</code>\u521b\u5efa <code>AddOne</code>\u7684\u591a\u4e2a\u5b9e\u4f8b\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3.experimental.hierarchy.Instantiate\n\nclass AddTwoInstantiate(width: Int) extends Module {\n  val in  = IO(Input(UInt(width.W)))\n  val out = IO(Output(UInt(width.W)))\n  val i0 = Instantiate(new AddOne(width))\n  val i1 = Instantiate(new AddOne(width))\n  i0.in := in\n  i1.in := i0.out\n  out   := i1.out\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new AddTwoInstantiate(16))\n</code></pre></p>"},{"location":"cookbooks/hierarchy/#_3","title":"\u5982\u4f55\u8bbf\u95ee\u5b9e\u4f8b\u7684\u5185\u90e8\u5b57\u6bb5\uff1f","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528<code>@public</code>\u6ce8\u89e3\u6807\u8bb0\u7528<code>@instantiable</code>\u6ce8\u89e3\u6807\u8bb0\u7684Module\u7c7b\u6216\u7279\u8d28\u7684\u5185\u90e8\u6210\u5458\u3002 \u8981\u6c42\u662f\u8be5\u5b57\u6bb5\u53ef\u516c\u5f00\u8bbf\u95ee\uff0c\u662f<code>val</code>\u6216<code>lazy val</code>\uff0c\u5e76\u4e14\u5fc5\u987b\u6709<code>Lookupable</code>\u7684\u5b9e\u73b0\u3002</p> <p>\u9ed8\u8ba4\u652f\u6301\u7684\u7c7b\u578b\u6709\uff1a</p> <ol> <li><code>Data</code></li> <li><code>BaseModule</code></li> <li><code>MemBase</code></li> <li><code>IsLookupable</code></li> <li>\u5305\u542b\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u7c7b\u578b\u7684<code>Iterable</code>/<code>Option</code>/<code>Either</code></li> <li>\u57fa\u672c\u7c7b\u578b\u5982<code>String</code>\u3001<code>Int</code>\u3001<code>BigInt</code>\u3001<code>Unit</code>\u7b49\u3002</li> </ol> <p>\u8981\u5c06\u8d85\u7c7b\u7684\u6210\u5458\u6807\u8bb0\u4e3a<code>@public</code>\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u6a21\u5f0f\uff08\u4ee5<code>val clock</code>\u4e3a\u4f8b\uff09\u3002</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:reset\nimport chisel3._\nimport chisel3.experimental.hierarchy.{instantiable, public}\n\n@instantiable\nclass MyModule extends Module {\n  @public val clock = clock\n}\n</code></pre> <p>\u5bf9\u4e8e\u4e0d\u6b63\u786e\u6807\u8bb0\u4e3a<code>@public</code>\u7684\u5185\u5bb9\uff0c\u60a8\u4f1a\u6536\u5230\u4ee5\u4e0b\u9519\u8bef\u6d88\u606f\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset:fail\nimport chisel3._\nimport chisel3.experimental.hierarchy.{instantiable, public}\n\nobject NotValidType\n\n@instantiable\nclass MyModule extends Module {\n  @public val x = NotValidType\n}\n</code></pre>"},{"location":"cookbooks/hierarchy/#_4","title":"\u5982\u4f55\u4f7f\u6211\u7684\u5b57\u6bb5\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f","text":"<p>\u5982\u679c\u5b9e\u4f8b\u7684\u5b57\u6bb5\u5f88\u7b80\u5355\uff08\u4f8b\u5982<code>Int</code>\u3001<code>String</code>\u7b49\uff09\uff0c\u5b83\u4eec\u53ef\u4ee5\u76f4\u63a5\u6807\u8bb0\u4e3a<code>@public</code>\u3002</p> <p>\u901a\u5e38\uff0c\u5b57\u6bb5\u66f4\u590d\u6742\uff08\u4f8b\u5982\u7528\u6237\u5b9a\u4e49\u7684case\u7c7b\uff09\u3002 \u5982\u679c\u4e00\u4e2acase\u7c7b\u4ec5\u7531\u7b80\u5355\u7c7b\u578b\u7ec4\u6210\uff08\u5373\u5b83\u4e0d\u5305\u542b\u4efb\u4f55<code>Data</code>\u3001<code>BaseModules</code>\u3001memories\u6216<code>Instances</code>\uff09\uff0c \u5b83\u53ef\u4ee5\u6269\u5c55<code>IsLookupable</code>\u7279\u8d28\u3002 \u8fd9\u5411Chisel\u8868\u660e<code>IsLookupable</code>\u7c7b\u7684\u5b9e\u4f8b\u53ef\u4ee5\u4ece\u5b9e\u4f8b\u5185\u90e8\u8bbf\u95ee\u3002 \uff08\u5982\u679c\u7c7b\u786e\u5b9e\u5305\u542b\u8bf8\u5982<code>Data</code>\u6216\u6a21\u5757\u4e4b\u7c7b\u7684\u5185\u5bb9\uff0c\u8bf7\u53c2\u89c1\u4e0b\u9762\u7684\u90e8\u5206\u3002\uff09</p> <p>\u4f46\u662f\uff0c\u786e\u4fdd\u8fd9\u4e9b\u53c2\u6570\u5bf9\u5b9a\u4e49\u7684\u6240\u6709\u5b9e\u4f8b\u90fd\u662f\u771f\u5b9e\u7684\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u7684\u53c2\u6570\u5305\u542b\u4e00\u4e2a\u7279\u5b9a\u4e8e\u5b9e\u4f8b\u7684id\u5b57\u6bb5\uff0c\u4f46\u9ed8\u8ba4\u4e3a\u96f6\uff0c \u90a3\u4e48\u5b9a\u4e49\u7684id\u5c06\u8fd4\u56de\u7ed9\u6240\u6709\u5b9e\u4f8b\u3002 \u5982\u679c\u5176\u4ed6\u4ee3\u7801\u5047\u8bbeid\u5b57\u6bb5\u662f\u6b63\u786e\u7684\uff0c\u8fd9\u79cd\u884c\u4e3a\u53d8\u5316\u53ef\u80fd\u5bfc\u81f4\u9519\u8bef\u3002</p> <p>\u56e0\u6b64\uff0c\u5f53\u5c06\u666e\u901a\u6a21\u5757\u8f6c\u6362\u4e3a\u4f7f\u7528\u6b64\u5305\u65f6\uff0c \u60a8\u9700\u8981\u5c0f\u5fc3\u6807\u8bb0\u4e3a<code>IsLookupable</code>\u7684\u5185\u5bb9\u3002</p> <p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u6dfb\u52a0\u4e86\u7279\u8d28<code>IsLookupable</code>\u4ee5\u5141\u8bb8\u6210\u5458\u88ab\u6807\u8bb0\u4e3a<code>@public</code>\u3002</p> <p>In the following example, we added the trait <code>IsLookupable</code> to allow the member to be marked <code>@public</code>.</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset:silent\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, instantiable, IsLookupable, public}\n\ncase class MyCaseClass(width: Int) extends IsLookupable\n\n@instantiable\nclass MyModule extends Module {\n  @public val x = MyCaseClass(10)\n}\n\nclass Top extends Module {\n  val inst = Instance(Definition(new MyModule))\n  println(s\"Width is ${inst.x.width}\")\n}\n</code></pre> <code>scala mdoc:passthrough println(\"</code>\") // \u8fd0\u884c\u8be6\u7ec6\u8bf4\u660e\uff0c\u4ee5\u4fbf\u4e0a\u9762\u7684println\u663e\u793a\u51fa\u6765 circt.stage.ChiselStage.elaborate(new Top) println(\"```\") <pre><code>## \u5982\u4f55\u4f7f\u5305\u542bData\u6216\u6a21\u5757\u7684case\u7c7b\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f\n\n\u5bf9\u4e8e\u5305\u542b`Data`\u3001`BaseModule`\u3001`MemBase`\u6216`Instance`\u7c7b\u578b\u7684case\u7c7b\uff0c\u60a8\u53ef\u4ee5\u63d0\u4f9b`Lookupable`\u7c7b\u578b\u7c7b\u7684\u5b9e\u73b0\u3002\n\n**\u6ce8\u610f\uff0c\u6a21\u5757\u7684Lookupable\u5df2\u88ab\u5f03\u7528\uff0c\u8bf7\u6539\u7528\u8f6c\u6362\u4e3aInstance\uff08\u4f7f\u7528`.toInstance`\uff09\u3002**\n\n\u8003\u8651\u4ee5\u4e0bcase\u7c7b\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, instantiable, public}\n\n@instantiable\nclass MyModule extends Module {\n  @public val wire = Wire(UInt(8.W))\n}\ncase class UserDefinedType(name: String, data: UInt, inst: Instance[MyModule])\n</code></pre></p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>UserDefinedType</code>\u7684\u5b9e\u4f8b\u5c06\u65e0\u6cd5\u4ece\u5b9e\u4f8b\u4e2d\u8bbf\u95ee\uff1a</p> <p>```scala mdoc:fail @instantiable class HasUserDefinedType extends Module {   val inst = Module(new MyModule)   val wire = Wire(UInt(8.W))   @public val x = UserDefinedType(\"foo\", wire, inst.toInstance) } <pre><code>\u6211\u4eec\u53ef\u4ee5\u4e3a`UserDefinedType`\u5b9e\u73b0`Lookupable`\u7c7b\u578b\u7c7b\uff0c\u4ee5\u4f7f\u5176\u53ef\u8bbf\u95ee\u3002\n\u8fd9\u6d89\u53ca\u5728`UserDefinedType`\u7684\u4f34\u751f\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u9690\u5f0fval\u3002\n\u56e0\u4e3a`UserDefinedType`\u6709\u4e09\u4e2a\u5b57\u6bb5\uff0c\u6211\u4eec\u4f7f\u7528`Lookupable.product3`\u5de5\u5382\u3002\n\u5b83\u63a5\u53d74\u4e2a\u7c7b\u578b\u53c2\u6570\uff1acase\u7c7b\u7684\u7c7b\u578b\uff0c\u4ee5\u53ca\u5176\u6bcf\u4e2a\u5b57\u6bb5\u7684\u7c7b\u578b\u3002\n\n**\u5982\u679c\u4efb\u4f55\u5b57\u6bb5\u662f`BaseModules`\uff0c\u60a8\u5fc5\u987b\u5c06\u5b83\u4eec\u66f4\u6539\u4e3a`Instance[_]`\u624d\u80fd\u5b9a\u4e49`Lookupable`\u7c7b\u578b\u7c7b\u3002**\n\n\u6709\u5173\u7c7b\u578b\u7c7b\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605[DataView\u90e8\u5206\u5173\u4e8e\u7c7b\u578b\u7c7b](https://www.chisel-lang.org/chisel3/docs/explanations/dataview#type-classes)\u3002\n\n```scala mdoc\nimport chisel3.experimental.hierarchy.Lookupable\nobject UserDefinedType {\n  // \u4f7f\u7528Lookupable.Simple\u7c7b\u578b\u522b\u540d\u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002\n  implicit val lookupable: Lookupable.Simple[UserDefinedType] =\n    Lookupable.product3[UserDefinedType, String, UInt, Instance[MyModule]](\n      // \u63d0\u4f9b\u5c06UserDefinedType\u8f6c\u6362\u4e3a\u5143\u7ec4\u7684\u914d\u65b9\u3002\n      x =&gt; (x.name, x.data, x.inst),\n      // \u63d0\u4f9b\u5c06\u5143\u7ec4\u8f6c\u6362\u4e3a\u7528\u6237\u5b9a\u4e49\u7c7b\u578b\u7684\u914d\u65b9\u3002\n      // \u5bf9\u4e8ecase\u7c7b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u7684\u5de5\u5382\u65b9\u6cd5\u3002\n      UserDefinedType.apply\n    )\n}\n</code></pre></p> <p>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b9e\u4f8b\u4e2d\u8bbf\u95ee<code>UserDefinedType</code>\u7684\u5b9e\u4f8b\uff1a</p> <p>```scala mdoc @instantiable class HasUserDefinedType extends Module {   val inst = Module(new MyModule)   val wire = Wire(UInt(8.W))   @public val x = UserDefinedType(\"foo\", wire, inst.toInstance) } class Top extends Module {   val inst = Instance(Definition(new HasUserDefinedType))   println(s\"Name is: ${inst.x.name}\") } <pre><code>## \u5982\u4f55\u4f7f\u7c7b\u578b\u53c2\u6570\u5316\u7684case\u7c7b\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f\n\n\u8003\u8651\u4ee5\u4e0b\u7c7b\u578b\u53c2\u6570\u5316\u7684case\u7c7b\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, instantiable, public}\n\ncase class ParameterizedUserDefinedType[A, T &lt;: Data](value: A, data: T)\n</code></pre></p> <p>\u4e0e<code>HasUserDefinedType</code>\u7c7b\u4f3c\uff0c\u6211\u4eec\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u9690\u5f0f\u63d0\u4f9b<code>Lookupable</code>\u7c7b\u578b\u7c7b\u3002 \u7136\u800c\uff0c\u4e0e\u4e0a\u9762\u7684\u7b80\u5355\u793a\u4f8b\u4e0d\u540c\uff0c\u6211\u4eec\u4f7f\u7528<code>implicit def</code>\u6765\u5904\u7406\u7c7b\u578b\u53c2\u6570\uff1a</p> <p><code>``scala mdoc import chisel3.experimental.hierarchy.Lookupable object ParameterizedUserDefinedType {   // \u7c7b\u578b\u7c7b\u5b9e\u4f8b\u5316\u662f\u9012\u5f52\u7684\uff0c\u6240\u4ee5A\u548cT\u90fd\u5fc5\u987b\u6709Lookupable\u5b9e\u4f8b\u3002   // \u6211\u4eec\u901a\u8fc7\u4e0a\u4e0b\u6587\u7ed1\u5b9a</code>: Lookupable`\u4e3aA\u8981\u6c42\u8fd9\u4e00\u70b9\u3002   // Data\u662fChisel\u5185\u7f6e\u7684\uff0c\u6240\u4ee5\u5df2\u77e5\u5177\u6709Lookupable\u5b9e\u4f8b\u3002   implicit def lookupable[A : Lookupable, T &lt;: Data]: Lookupable.Simple[ParameterizedUserDefinedType[A, T]] =     Lookupable.product2ParameterizedUserDefinedType[A, T], A, T } <pre><code>\u73b0\u5728\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u5b9e\u4f8b\u4e2d\u8bbf\u95ee`ParameterizedUserDefinedType`\u7684\u5b9e\u4f8b\uff1a\n\n```scala mdoc\nclass ChildModule extends Module {\n  @public val wire = Wire(UInt(8.W))\n}\n@instantiable\nclass HasUserDefinedType extends Module {\n  val wire = Wire(UInt(8.W))\n  @public val x = ParameterizedUserDefinedType(\"foo\", wire)\n  @public val y = ParameterizedUserDefinedType(List(1, 2, 3), wire)\n}\nclass Top extends Module {\n  val inst = Instance(Definition(new HasUserDefinedType))\n  println(s\"x.value is: ${inst.x.value}\")\n  println(s\"y.value.head is: ${inst.y.value.head}\")\n}\n</code></pre></p>"},{"location":"cookbooks/hierarchy/#case","title":"\u5982\u4f55\u4f7f\u5177\u6709\u5927\u91cf\u5b57\u6bb5\u7684case\u7c7b\u53ef\u4ece\u5b9e\u4f8b\u8bbf\u95ee\uff1f","text":"<p>Lookupable\u63d0\u4f9b\u4e86\u4ece<code>product1</code>\u5230<code>product5</code>\u7684\u5de5\u5382\u3002 \u5982\u679c\u60a8\u7684\u7c7b\u6709\u8d85\u8fc75\u4e2a\u5b57\u6bb5\uff0c\u60a8\u53ef\u4ee5\u5728\u6620\u5c04\u4e2d\u4f7f\u7528\u5d4c\u5957\u5143\u7ec4\u4f5c\u4e3a\"\u4f2a\u5b57\u6bb5\"\u3002</p> <p>```scala mdoc case class LotsOfFields(a: Data, b: Data, c: Data, d: Data, e: Data, f: Data) object LotsOfFields {   implicit val lookupable: Lookupable.Simple[LotsOfFields] =     Lookupable.product5LotsOfFields, Data, Data, Data, Data, (Data, Data) } <pre><code>## \u5982\u4f55\u4eceDefinition\u67e5\u627e\u5b57\u6bb5\uff0c\u5982\u679c\u6211\u4e0d\u60f3\u5b9e\u4f8b\u5316\u5b83\uff1f\n\n\u5c31\u50cf`Instance`\u4e00\u6837\uff0c`Definition`\u4e5f\u5305\u542b`@public`\u6210\u5458\u7684\u8bbf\u95ee\u5668\u3002\n\u56e0\u6b64\uff0c\u60a8\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5b83\u4eec\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset:silent\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, instantiable, public}\n\n@instantiable\nclass AddOne(val width: Int) extends RawModule {\n  @public val width = width\n  @public val in  = IO(Input(UInt(width.W)))\n  @public val out = IO(Output(UInt(width.W)))\n  out := in + 1.U\n}\n\nclass Top extends Module {\n  val definition = Definition(new AddOne(10))\n  println(s\"Width is: ${definition.width}\")\n}\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new Top())\n</code></pre>"},{"location":"cookbooks/hierarchy/#_5","title":"\u5982\u4f55\u901a\u8fc7\u5176\u5b50\u5b9e\u4f8b\u53c2\u6570\u5316\u6a21\u5757\uff1f","text":"<p>\u5728\u5f15\u5165\u8fd9\u4e2a\u5305\u4e4b\u524d\uff0c\u7236\u6a21\u5757\u5728\u5b9e\u4f8b\u5316\u5b50\u6a21\u5757\u65f6\u5fc5\u987b\u4f20\u9012\u6240\u6709\u5fc5\u8981\u7684\u53c2\u6570\u3002 \u8fd9\u5e26\u6765\u4e86\u4e00\u4e2a\u4e0d\u5e78\u7684\u540e\u679c\uff0c\u5373\u7236\u6a21\u5757\u7684\u53c2\u6570\u603b\u662f\u5fc5\u987b\u5305\u542b\u5b50\u6a21\u5757\u7684 \u53c2\u6570\uff0c\u8fd9\u662f\u4e00\u79cd\u4e0d\u5fc5\u8981\u7684\u8026\u5408\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e9b\u53cd\u6a21\u5f0f\u3002</p> <p>\u73b0\u5728\uff0c\u7236\u6a21\u5757\u53ef\u4ee5\u5c06\u5b50\u6a21\u5757\u7684<code>Definition</code>\u4f5c\u4e3a\u53c2\u6570\uff0c\u5e76\u76f4\u63a5\u5b9e\u4f8b\u5316\u5b83\u3002 \u6b64\u5916\uff0c\u5b83\u53ef\u4ee5\u5206\u6790\u7528\u4e8e\u5b9a\u4e49\u4e2d\u7684\u53c2\u6570\u6765\u53c2\u6570\u5316\u81ea\u8eab\u3002 \u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u8bf4\uff0c\u73b0\u5728\u5b50\u6a21\u5757\u5b9e\u9645\u4e0a\u53ef\u4ee5\u53c2\u6570\u5316\u7236\u6a21\u5757\u3002</p> <p>\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u521b\u5efa\u4e86<code>AddOne</code>\u7684\u5b9a\u4e49\uff0c\u5e76\u5c06\u8be5\u5b9a\u4e49\u4f20\u9012\u7ed9<code>AddTwo</code>\u3002 <code>AddTwo</code>\u7aef\u53e3\u7684\u5bbd\u5ea6\u73b0\u5728\u4ece<code>AddOne</code>\u5b9e\u4f8b\u7684\u53c2\u6570\u5316\u4e2d\u6d3e\u751f\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, instantiable, public}\n\n@instantiable\nclass AddOne(val width: Int) extends Module {\n  @public val width = width\n  @public val in  = IO(Input(UInt(width.W)))\n  @public val out = IO(Output(UInt(width.W)))\n  out := in + 1.U\n}\n\nclass AddTwo(addOneDef: Definition[AddOne]) extends Module {\n  val i0 = Instance(addOneDef)\n  val i1 = Instance(addOneDef)\n  val in  = IO(Input(UInt(addOneDef.width.W)))\n  val out = IO(Output(UInt(addOneDef.width.W)))\n  i0.in := in\n  i1.in := i0.out\n  out   := i1.out\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nchisel3.docs.emitSystemVerilog(new AddTwo(Definition(new AddOne(10))))\n</code></pre></p>"},{"location":"cookbooks/hierarchy/#select","title":"\u5982\u4f55\u4f7f\u7528\u65b0\u7684\u5c42\u6b21\u7ed3\u6784\u7279\u5b9a\u7684Select\u51fd\u6570\uff1f","text":"<p>Select\u51fd\u6570\u53ef\u4ee5\u5728\u6a21\u5757\u88ab\u8be6\u7ec6\u8bf4\u660e\u540e\u5e94\u7528\uff0c\u53ef\u4ee5\u5728Chisel Aspect\u4e2d\u6216\u5728\u7236\u6a21\u5757\u4e2d\u5e94\u7528\u4e8e\u5b50\u6a21\u5757\u3002</p> <p>\u6709\u4e03\u4e2a\u5c42\u6b21\u7ed3\u6784\u7279\u5b9a\u7684\u51fd\u6570\uff0c\u9664\u4e86<code>ios</code>\u4ee5\u5916\uff0c\u5b83\u4eec\u8981\u4e48\u8fd4\u56de<code>Instance</code>\uff0c\u8981\u4e48\u8fd4\u56de<code>Definition</code>\uff1a  - <code>instancesIn(parent)</code>\uff1a\u8fd4\u56de\u76f4\u63a5\u5728<code>parent</code>\u4e2d\u672c\u5730\u5b9e\u4f8b\u5316\u7684\u6240\u6709\u5b9e\u4f8b  - <code>instancesOf[type](parent)</code>\uff1a\u8fd4\u56de\u76f4\u63a5\u5728<code>parent</code>\u4e2d\u672c\u5730\u5b9e\u4f8b\u5316\u7684\u6240\u6709\u63d0\u4f9b\u7684<code>type</code>\u7684\u5b9e\u4f8b  - <code>allInstancesOf[type](root)</code>\uff1a\u8fd4\u56de\u4ece<code>root</code>\u5f00\u59cb\uff0c\u76f4\u63a5\u548c\u95f4\u63a5\u5730\u5b9e\u4f8b\u5316\u7684\uff0c\u672c\u5730\u548c\u6df1\u5c42\u7684\u6240\u6709\u63d0\u4f9b\u7684<code>type</code>\u7684\u5b9e\u4f8b  - <code>definitionsIn</code>\uff1a\u8fd4\u56de\u76f4\u63a5\u5728<code>parent</code>\u4e2d\u672c\u5730\u5b9e\u4f8b\u5316\u7684\u6240\u6709\u5b9e\u4f8b\u7684\u5b9a\u4e49  - <code>definitionsOf[type]</code>\uff1a\u8fd4\u56de\u76f4\u63a5\u5728<code>parent</code>\u4e2d\u672c\u5730\u5b9e\u4f8b\u5316\u7684\u6240\u6709\u63d0\u4f9b\u7684<code>type</code>\u7684\u5b9e\u4f8b\u7684\u5b9a\u4e49  - <code>allDefinitionsOf[type]</code>\uff1a\u8fd4\u56de\u4ece<code>root</code>\u5f00\u59cb\uff0c\u76f4\u63a5\u548c\u95f4\u63a5\u5730\u5b9e\u4f8b\u5316\u7684\uff0c\u672c\u5730\u548c\u6df1\u5c42\u7684\u6240\u6709\u63d0\u4f9b\u7684<code>type</code>\u7684\u5b9e\u4f8b\u7684\u5b9a\u4e49  - <code>ios</code>\uff1a\u8fd4\u56de\u63d0\u4f9b\u7684\u5b9a\u4e49\u6216\u5b9e\u4f8b\u7684\u6240\u6709I/O\u3002</p> <p>\u4e3a\u4e86\u6f14\u793a\u8fd9\u4e00\u70b9\uff0c\u8003\u8651\u4ee5\u4e0b\u60c5\u51b5\u3002\u6211\u4eec\u6a21\u62df\u4e86\u4e00\u4e2a\u793a\u4f8b\uff0c\u5176\u4e2d\u6211\u4eec\u4f7f\u7528<code>Select.allInstancesOf</code>\u548c<code>Select.allDefinitionsOf</code>\u6765\u6ce8\u89e3<code>EmptyModule</code>\u7684\u5b9e\u4f8b\u548c\u5b9a\u4e49\u3002 \u5f53\u6ce8\u89e3\u903b\u8f91\u5728\u8be6\u7ec6\u8bf4\u660e\u540e\u6267\u884c\u65f6\uff0c\u6211\u4eec\u6253\u5370\u7ed3\u679c<code>Target</code>\u3002 \u5982\u6240\u793a\uff0c\u5c3d\u7ba1<code>EmptyModule</code>\u5b9e\u9645\u4e0a\u53ea\u88ab\u8be6\u7ec6\u8bf4\u660e\u4e86\u4e00\u6b21\uff0c\u4f46\u6839\u636e\u5982\u4f55\u9009\u62e9\u5b9e\u4f8b\u6216\u5b9a\u4e49\uff0c\u6211\u4eec\u4ecd\u7136\u63d0\u4f9b\u4e0d\u540c\u7684\u76ee\u6807\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:reset\nimport chisel3._\nimport chisel3.experimental.hierarchy.{Definition, Instance, Hierarchy, instantiable, public}\n\n@instantiable\nclass EmptyModule extends Module {\n  println(\"Elaborating EmptyModule!\")\n}\n\n@instantiable\nclass TwoEmptyModules extends Module {\n  val definition = Definition(new EmptyModule)\n  val i0         = Instance(definition)\n  val i1         = Instance(definition)\n}\n\nclass Top extends Module {\n  val definition = Definition(new TwoEmptyModules)\n  val instance   = Instance(definition)\n  aop.Select.allInstancesOf[EmptyModule](instance).foreach { i =&gt;\n    experimental.annotate(i) {\n      println(\"instance: \" + i.toTarget)\n      Nil\n    }\n  }\n  aop.Select.allDefinitionsOf[EmptyModule](instance).foreach { d =&gt;\n    experimental.annotate(d) {\n      println(\"definition: \" + d.toTarget)\n      Nil\n    }\n  }\n}\n</code></pre> <code>scala mdoc:passthrough println(\"</code>\") val x = circt.stage.ChiselStage.emitCHIRRTL(new Top) println(\"<code>\") <pre><code>\u60a8\u8fd8\u53ef\u4ee5\u5728`Definition`\u6216`Instance`\u4e0a\u4f7f\u7528`Select.ios`\u6765\u9002\u5f53\u5730\u6ce8\u89e3I/O\uff1a\n\n```scala mdoc\n@instantiable\nclass InOutModule extends Module {\n  @public val in = IO(Input(Bool()))\n  @public val out = IO(Output(Bool()))\n  out := in\n}\n\n@instantiable\nclass TwoInOutModules extends Module {\n  val in = IO(Input(Bool()))\n  val out = IO(Output(Bool()))\n  val definition = Definition(new InOutModule)\n  val i0         = Instance(definition)\n  val i1         = Instance(definition)\n  i0.in := in\n  i1.in := i0.out\n  out := i1.out\n}\n\nclass InOutTop extends Module {\n  val definition = Definition(new TwoInOutModules)\n  val instance   = Instance(definition)\n  aop.Select.allInstancesOf[InOutModule](instance).foreach { i =&gt;\n    aop.Select.ios(i).foreach { io =&gt;\n      experimental.annotate(io) {\n        println(\"instance io: \" + io.toTarget)\n        Nil\n      }\n    }\n  }\n  aop.Select.allDefinitionsOf[InOutModule](instance).foreach { d =&gt;\n    aop.Select.ios(d).foreach { io =&gt;\n      experimental.annotate(io) {\n        println(\"definition io: \" + io.toTarget)\n        Nil\n      }\n    }\n  }\n}\n</code></pre></code>scala mdoc:passthrough println(\"<code>\") val y = circt.stage.ChiselStage.emitCHIRRTL(new InOutTop) println(\"</code>\") ```</p>"},{"location":"cookbooks/naming/","title":"\u547d\u540d(naming)","text":"<pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nimport chisel3._\nimport chisel3.docs.emitSystemVerilog\n</code></pre>"},{"location":"cookbooks/naming/#_1","title":"\u547d\u540d\u624b\u518c","text":"<ul> <li>\u547d\u540d\u624b\u518c<ul> <li>\u6211\u4ecd\u7136\u6709_T\u4fe1\u53f7\uff0c\u8fd9\u53ef\u4ee5\u4fee\u590d\u5417\uff1f</li> <li>\u6211\u6709\u8bb8\u591a\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7ebf\u8def\uff0c\u5982x\u3001x_1\u548cx_2\u3002\u5982\u4f55\u4f7f\u5b83\u4eec\u66f4\u5bb9\u6613\u7406\u89e3\uff1f</li> <li>\u5982\u4f55\u4e3awhen\u5b50\u53e5\u751f\u6210\u7684\u4ee3\u7801\u83b7\u5f97\u66f4\u597d\u7684\u540d\u79f0\uff1f</li> <li>\u6211\u4ecd\u7136\u770b\u5230_GEN\u4fe1\u53f7\uff0c\u8fd9\u53ef\u4ee5\u4fee\u590d\u5417\uff1f</li> <li>\u5982\u4f55\u4f7f\u6211\u7684\u6a21\u5757\u62e5\u6709\u66f4\u7a33\u5b9a\u7684\u540d\u79f0\uff0c\u800c\u4e0d\u662f'Module_1'\u548c'Module_42'\uff1f</li> <li>\u6211\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u6211\u60f3\u8981\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5185\u8054\u4e00\u4e2a\u5b9e\u4f8b\u4f1a\u6539\u53d8\u6211\u7684\u540d\u79f0\uff01</li> </ul> </li> </ul>"},{"location":"cookbooks/naming/#_t","title":"\u6211\u4ecd\u7136\u6709_T\u4fe1\u53f7\uff0c\u8fd9\u53ef\u4ee5\u4fee\u590d\u5417\uff1f","text":"<p>\u8bf7\u53c2\u89c1\u4e0b\u4e00\u4e2a\u56de\u7b54\uff01</p>"},{"location":"cookbooks/naming/#xx_1x_2","title":"\u6211\u6709\u8bb8\u591a\u5177\u6709\u76f8\u540c\u540d\u79f0\u7684\u7ebf\u8def\uff0c\u5982<code>x</code>\u3001<code>x_1</code>\u548c<code>x_2</code>\u3002\u5982\u4f55\u4f7f\u5b83\u4eec\u66f4\u5bb9\u6613\u7406\u89e3\uff1f","text":"<p>\u5e26\u6709<code>_T</code>\u540d\u79f0\u6216Chisel\u5fc5\u987b\u7edf\u4e00\u547d\u540d\u7684\u4fe1\u53f7 \u901a\u5e38\u662f\u5728\u5faa\u73af\u3001\u51fd\u6570\u8c03\u7528\u6216<code>when</code>\u8c13\u8bcd\u4e2d\u751f\u6210\u7684\u4e2d\u95f4\u503c\u3002 \u5b83\u4eec\u4e5f\u53ef\u80fd\u88ab<code>assert</code>\u6216<code>prints</code>\u7b49\u9a8c\u8bc1\u8bed\u53e5\u4f7f\u7528\u3002 \u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\uff0c\u7f16\u8bd1\u5668\u63d2\u4ef6\u901a\u5e38\u627e\u4e0d\u5230\u597d\u7684\u524d\u7f00\u6765\u4e3a\u751f\u6210\u7684 \u4e2d\u95f4\u4fe1\u53f7\u547d\u540d\uff0c\u56e0\u6b64\u65e0\u6cd5\u4e3a\u5b83\u4eec\u547d\u540d\u6216\u5fc5\u987b\u4e3a\u5b83\u4eec\u521b\u5efa\u552f\u4e00\u7684\u540d\u79f0\u3002</p> <p>\u6211\u4eec\u5efa\u8bae\u60a8\u624b\u52a8\u63d2\u5165\u5bf9<code>prefix</code>\u7684\u8c03\u7528\u4ee5\u6f84\u6e05\u8fd9\u4e9b\u60c5\u51b5\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3.experimental.prefix\nclass ExamplePrefix extends Module {\n\n  Seq.tabulate(2) { i =&gt;\n    Seq.tabulate(2) { j =&gt;\n      prefix(s\"loop_${i}_${j}\"){\n        val x = WireInit((i*0x10+j).U(8.W))\n        dontTouch(x)\n      }\n    }\n  }\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nemitSystemVerilog(new ExamplePrefix)\n</code></pre></p>"},{"location":"cookbooks/naming/#when","title":"\u5982\u4f55\u4e3a<code>when</code>\u5b50\u53e5\u751f\u6210\u7684\u4ee3\u7801\u83b7\u5f97\u66f4\u597d\u7684\u540d\u79f0\uff1f","text":"<p><code>prefix</code> API\u53ef\u4ee5\u5e2e\u52a9\u5904\u7406<code>when</code>\u5b50\u53e5\u5185\u7684\u4ee3\u7801\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass ExampleWhenPrefix extends Module {\n\n  val in = IO(Input(UInt(4.W)))\n  val out = IO(Output(UInt(4.W)))\n\n  out := DontCare\n\n  Seq.tabulate(2) { i =&gt;\n    val j = i + 1\n    prefix(s\"clause_${j}\") {\n      when (in === j.U) {\n        val foo = Reg(UInt(4.W))\n        foo := in + j.U(4.W)\n        out := foo\n      }\n    }\n  }\n}\n</code></pre> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nemitSystemVerilog(new ExampleWhenPrefix)\n</code></pre></p>"},{"location":"cookbooks/naming/#_gen","title":"\u6211\u4ecd\u7136\u770b\u5230_GEN\u4fe1\u53f7\uff0c\u8fd9\u53ef\u4ee5\u4fee\u590d\u5417\uff1f","text":"<p><code>_GEN</code>\u4fe1\u53f7\u901a\u5e38\u7531FIRRTL\u7f16\u8bd1\u5668\u751f\u6210\uff0c\u800c\u4e0d\u662fChisel\u5e93\u3002\u6211\u4eec\u6b63\u5728\u52aa\u529b \u7528\u66f4\u591a\u4e0a\u4e0b\u6587\u76f8\u5173\u7684\u540d\u79f0\u91cd\u547d\u540d\u8fd9\u4e9b\u4fe1\u53f7\uff0c\u4f46\u8fd9\u662f\u4e00\u9879\u6b63\u5728\u8fdb\u884c\u7684\u5de5\u4f5c\u3002\u611f\u8c22\u60a8\u7684\u5173\u6ce8\uff01</p>"},{"location":"cookbooks/naming/#module_1module_42","title":"\u5982\u4f55\u4f7f\u6211\u7684\u6a21\u5757\u62e5\u6709\u66f4\u7a33\u5b9a\u7684\u540d\u79f0\uff0c\u800c\u4e0d\u662f'Module_1'\u548c'Module_42'\uff1f","text":"<p>\u8fd9\u662f\u6a21\u5757\u4e0d\u7a33\u5b9a\u6027\u95ee\u9898\u7684\u4e00\u4e2a\u4f8b\u5b50\uff0c\u8fd9\u662f\u7531\u4e8e\u51e0\u4e2a\u6a21\u5757\u5171\u4eab\u5b8c\u5168\u76f8\u540c\u7684\u540d\u79f0\u9020\u6210\u7684\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u60a8\u5fc5\u987b\u4e3a\u60a8\u7684<code>Module</code>\u6dfb\u52a0\u66f4\u591a\u7684\u7279\u5f02\u6027\uff0c\u4ee5\u907f\u514d\u8fd9\u4e9b\u540d\u79f0\u51b2\u7a81\u3002</p> <p>\u8fd9\u53ef\u4ee5\u901a\u8fc7\u5229\u7528<code>desiredName</code>\u548c<code>typeName</code> API\u6765\u5b9e\u73b0\u3002 <code>desiredName</code>\u7528\u4e8e\u6307\u793a<code>Modules</code>\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff0c\u53d7\u4f20\u5165\u53c2\u6570\u7684\u5f71\u54cd\uff09\uff0c\u800c<code>typeName</code>\u5bf9\u4e8e\u7531<code>Data</code>\u7684\u5b50\u7c7b\u8fdb\u884c\u7c7b\u578b\u53c2\u6570\u5316\u7684\u6a21\u5757\u5f88\u6709\u7528\u3002\u91cd\u5199<code>desiredName</code>\u53ef\u4ee5\u51cf\u5c11\u751a\u81f3\u6d88\u9664\u540d\u79f0\u51b2\u7a81\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u7684\u6a21\u5757\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass MyModule[T &lt;: Data](gen: T) extends Module {\n  // ...\n}\n</code></pre> <p>We can override <code>desiredName</code> of the module to include the type name of the <code>gen</code> parameter like so:</p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible:reset\nimport chisel3._\nimport chisel3.util.Queue\nimport chisel3.docs.emitSystemVerilog\n</code></pre> <p>```scala mdoc class MyModuleT &lt;: Data extends Module {   override def desiredName = s\"MyModule_${gen.typeName}\" } <pre><code>\u60a8\u7684`MyModule`\u7684\u4efb\u4f55\u5b9e\u4f8b\u73b0\u5728\u90fd\u5c06\u5177\u6709\u5305\u542b\u7c7b\u578b\u53c2\u6570\u7684Verilog\u6a21\u5757\u540d\u79f0\u3002\n\n```scala mdoc:compile-only\nval foo = Module(new MyModule(UInt(4.W))) // MyModule_UInt4\nval bar = Module(new MyModule(Vec(3, UInt(4.W)))) // MyModule_Vec3_UInt4\n</code></pre></p> <p>\u8bf7\u6ce8\u610f\uff0c\u6240\u6709\u57fa\u672c\u7684Chisel\u5de5\u5177\u6a21\u5757\uff0c\u5982<code>Queue</code>\uff0c\u90fd\u5df2\u7ecf\u50cf\u8fd9\u6837\u5b9e\u73b0\u4e86<code>desiredName</code>\uff1a</p> <p>```scala mdoc:compile-only val fooQueue = Module(new Queue(UInt(8.W), 4)) // Verilog\u6a21\u5757\u5c06\u88ab\u547d\u540d\u4e3a'Queue4_UInt8' val barQueue = Module(new Queue(SInt(12.W), 3)) // ...\u4ee5\u53ca'Queue3_SInt12' val bazQueue = Module(new Queue(Bool(), 16)) // ...\u4ee5\u53ca'Queue16_Bool' <pre><code>### \u5982\u4f55\u4e3a\u6211\u7684\u6570\u636e\u7c7b\u578b\u7f16\u5199\u81ea\u5df1\u7684`typeName`\uff1f\n\n\u5982\u679c\u60a8\u4f7f\u7528\u81ea\u5df1\u7684\u7528\u6237\u5b9a\u4e49\u7684`Bundle`\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199\u5b83\u6765\u589e\u52a0\u5176\u81ea\u8eab`typeName`\u7684\u7279\u5f02\u6027\u3002\u6240\u6709`Data`\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u9ed8\u8ba4`typeName`\u5b9e\u73b0\uff08\u4ec5\u4ec5\u662f\u5176\u7c7b\u540d\uff09\uff0c\u4f46\u60a8\u53ef\u4ee5\u81ea\u5df1\u91cd\u5199\u8fd9\u4e2a\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass MyBundle[T &lt;: Data](gen: T, intParam: Int) extends Bundle {\n  // \u4e3a\u6b64Bundle\u751f\u6210\u4e00\u4e2a\u7a33\u5b9a\u7684typeName\u3002\u8fd9\u4e2a\u5b9e\u73b0\u4e2d\u5b58\u5728\u4e24\u4e2a'\u8bcd'\uff1a\n  // bundle\u7684\u540d\u79f0\u52a0\u4e0a\u5176\u6574\u6570\u53c2\u6570\uff08\u7c7b\u4f3c\u4e8e'MyBundle9'\uff09\n  // \u4ee5\u53ca\u751f\u6210\u5668\u7684typeName\uff0c\u5b83\u672c\u8eab\u53ef\u4ee5\u7531'\u8bcd'\u7ec4\u6210\n  // \uff08\u7c7b\u4f3c\u4e8e'Vec3_UInt4'\uff09\n  override def typeName = s\"MyBundle${intParam}_${gen.typeName}\"\n\n  // ...\n}\n</code></pre></p> <p>\u73b0\u5728\uff0c\u5982\u679c\u60a8\u5728\u8bf8\u5982<code>Queue</code>\u8fd9\u6837\u7684\u6a21\u5757\u4e2d\u4f7f\u7528\u60a8\u7684<code>MyBundle</code>\uff1a</p> <p>```scala mdoc:compile-only val fooQueue = Module(new Queue(new MyBundle(UInt(4.W), 3), 16)) // Queue16_MyBundle3_UInt4 <pre><code>\u5bf9\u4e8e`typeName`\u548c\u968f\u540e\u7684`desiredName`\u7684\u5efa\u8bae\u6a21\u5f0f\u662f\u5c06\u5355\u4e2a\u6574\u6570\u7c7b\u53c2\u6570\u4e0e\u540d\u79f0\u672c\u8eab\u6298\u53e0\uff08\u4f8b\u5982\uff0c`Queue4`\uff0c`UInt3`\uff0c`MyBundle9`\uff09\u5f62\u6210\"\u8bcd\"\uff0c\u5e76\u7528\u4e0b\u5212\u7ebf\u5206\u9694\u8fd9\u4e9b\"\u8bcd\"\uff08`Queue4_UInt3`\uff0c`FooBundle_BarType4`\uff09\u3002\n\n\u76ee\u524d\uff0c\u5177\u6709\u591a\u4e2a\u6574\u6570\u53c2\u6570\u7684`Bundles`\u5c1a\u672a\u88ab\u4efb\u4f55\u5185\u7f6e\u6a21\u5757\u89e3\u51b3\uff0c\u56e0\u6b64\u4e3a\u8fd9\u4e9b`Bundles`\u5b9e\u73b0\u4e00\u4e2a\u63cf\u8ff0\u6027\u548c\u8db3\u591f\u53ef\u533a\u5206\u7684`typeName`\u7559\u7ed9\u8bfb\u8005\u4f5c\u4e3a\u7ec3\u4e60\u3002\u7136\u800c\uff0c\u6574\u6570\u4e0d\u5e94\u8be5\u5728`typeName`\u7684\u6700\u540e\u51fa\u73b0\u4e0b\u5212\u7ebf\uff08\u4f8b\u5982\uff0c`MyBundle_1`\uff09\uff0c\u56e0\u4e3a\u8fd9\u662f\u7528\u4e8e\u91cd\u590d\u7684_\u76f8\u540c_\u8bed\u6cd5\uff0c\u56e0\u6b64\u4f1a\u5f15\u8d77\u6df7\u6dc6\u3002\u5fc5\u987b\u533a\u5206\u6240\u6709\u540d\u4e3a`Queue32_MyBundle_4_1`\u3001`Queue32_MyBundle_4_2`\u3001`Queue32_MyBundle_4_3`\u7b49\u7684\u6a21\u5757\u786e\u5b9e\u662f\u4e0d\u7406\u60f3\u7684\uff01\n\n### \u6211\u4e0d\u60f3\u4e00\u904d\u53c8\u4e00\u904d\u5730\u91cd\u5199`typeName`\uff01\u6709\u6ca1\u6709\u751f\u6210`typeName`\u7684\u7b80\u5355\u65b9\u6cd5\uff1f\n\n\u662f\u7684\uff0c\u901a\u8fc7\u5b9e\u9a8c\u6027\u7684`HasAutoTypename`\u7279\u8d28\u3002\u8fd9\u4e2a\u7279\u8d28\u53ef\u4ee5\u6df7\u5165\u5230\u60a8\u7684`Bundle`\u4e2d\uff0c\u6839\u636e\u8be5`Bundle`\u7684\u6784\u9020\u51fd\u6570\u53c2\u6570\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u7c7b\u4f3c\u5143\u7ec4\u7684`typeName`\u3002\u8ba9\u6211\u4eec\u770b\u770b\u524d\u9762\u7684\u4f8b\u5b50\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible:reset\nimport chisel3._\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass MyBundle[T &lt;: Data](gen: T, intParam: Int) extends Bundle {\n  override def typeName = s\"MyBundle_${gen.typeName}_${intParam}\"\n  // ...\n}\n</code></pre> <p>```scala mdoc new MyBundle(UInt(8.W), 3).typeName <pre><code>```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible:reset\nimport chisel3._\nimport chisel3.docs.emitSystemVerilog\n</code></pre></p> <p>\u81ea\u52a8\u751f\u6210\u7684<code>typeName</code>\u91c7\u7528<code>{Bundle\u540d\u79f0}_{\u53c2\u6570\u503c1}_{\u53c2\u6570\u503c2}_{...}</code>\u7684\u5f62\u5f0f\uff0c\u56e0\u6b64\u6211\u4eec\u7684<code>MyBundle</code>\u53ef\u4ee5\u7b49\u6548\u5730\u8868\u793a\u4e3a\uff1a <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3.experimental.HasAutoTypename\nclass MyBundle[T &lt;: Data](gen: T, intParam: Int) extends Bundle with HasAutoTypename {\n  // ...\n  // \u6ce8\u610f\uff1a\u8fd9\u91cc\u6ca1\u6709`override def typeName`\u8bed\u53e5\n}\n</code></pre></p> <p>```scala mdoc new MyBundle(UInt(8.W), 3).typeName <pre><code>### \u6211\u53ef\u4ee5\u5728FIRRTL\u4e2d\u547d\u540d\u6211\u7684bundle\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u751f\u6210\u6781\u957f\u7684bundle\u7c7b\u578b\u5417\uff1f\n\n\u662f\u7684\uff0c\u4f7f\u7528`HasTypeAlias`\u7279\u8d28\u3002FIRRTL\u6709\u4e00\u4e2a\u7ed3\u6784\uff0c\u53ef\u4ee5\u7528\u7c7b\u578b\u522b\u540d\u6765\u522b\u540d\u4e00\u4e2abundle\u7c7b\u578b\uff0c\u5982\u4e0b\u6240\u793a\uff1a\n</code></pre> circuit Top :   type MyBundle = { foo : UInt&lt;8&gt;, bar : UInt&lt;1&gt;}</p> <p>module Top :     //... <pre><code>\u8fd9\u4e9b\u53ef\u4ee5\u901a\u8fc7\u5728\u7528\u6237\u5b9a\u4e49\u7684`Record`\u4e2d\u6df7\u5165`HasTypeAlias`\u5e76\u5b9e\u73b0\u4e00\u4e2a\u540d\u4e3a`aliasName`\u7684\u5b57\u6bb5\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a`RecordAlias(...)`\u5b9e\u4f8b\uff0c\u4eceChisel\u81ea\u52a8\u53d1\u51fa\u3002\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3.experimental.{HasTypeAlias, RecordAlias}\n\nclass AliasedBundle extends Bundle with HasTypeAlias {\n  override def aliasName = RecordAlias(\"MyAliasedBundle\")\n  val foo = UInt(8.W)\n  val bar = Bool()\n}\n</code></pre></p> <p>\u8ba9\u6211\u4eec\u770b\u770b\u5f53\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a<code>Bundle</code>\u751f\u6210FIRRTL\u65f6\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:invisible\nimport circt.stage.ChiselStage.{emitCHIRRTL =&gt; emitFIRRTL}\n</code></pre> <code>scala mdoc emitFIRRTL(new Module {   val wire = Wire(new AliasedBundle) }) <pre><code>`HasTypeAlias`\u8fd8\u652f\u6301\u5d4c\u5957\u7684bundle\uff1a\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass Child extends Bundle with HasTypeAlias {\n  override def aliasName = RecordAlias(\"ChildBundle\")\n  val x = UInt(8.W)\n}\n\nclass Parent extends Bundle with HasTypeAlias {\n  override def aliasName = RecordAlias(\"ParentBundle\")\n  val child = new Child\n}\n</code></pre></code>scala mdoc emitFIRRTL(new Module {   val wire = Wire(new Parent) }) <pre><code>### \u4e3a\u4ec0\u4e48\u6211\u5728FIRRTL\u4e2d\u603b\u662f\u770b\u5230_stripped\u540e\u7f00\uff1f\u6211\u6ca1\u6709\u5728`aliasName`\u4e2d\u6307\u5b9a\u8fd9\u4e2a\u3002\n\n\u60a8\u6b63\u5728\u7ed3\u5408\u4f7f\u7528`Input(...)`\u6216`Output(...)`\u4e0e\u5305\u542b`Flipped(...)`\u7684\u522b\u540d`Record`\u3002\u8fd9\u4e9b\u7ffb\u8f6c\u503c\u88ab`Input`\u548c`Output`\u5265\u79bb\uff0c\u8fd9\u4ece\u6839\u672c\u4e0a\u6539\u53d8\u4e86\u7236`Record`\u7684\u7c7b\u578b\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass StrippedBundle extends Bundle with HasTypeAlias {\n  override def aliasName = RecordAlias(\"StrippedBundle\")\n  val flipped = Flipped(UInt(8.W))\n  val normal = UInt(8.W)\n}\n</code></pre></p> <p>```scala mdoc emitFIRRTL(new Module {   val in = IO(Input(new StrippedBundle)) }) <pre><code>\u6ce8\u610fbundle\u7c7b\u578b\u4e0d\u5305\u542b`flip flipped : UInt&lt;8&gt;`\u5b57\u6bb5\uff0c\u522b\u540d\u83b7\u5f97\u4e86`\"_stripped\"`\u540e\u7f00\uff01\u8fd9\u4e2a`Bundle`\u7c7b\u578b\u4e0d\u518d\u4e0e\u6211\u4eec\u5728Chisel\u4e2d\u7f16\u5199\u7684\u76f8\u540c\uff0c\u6240\u4ee5\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u533a\u5206\u4e3a\u8fd9\u6837\u3002\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9644\u52a0\u5230`Record`\u540d\u79f0\u7684\u540e\u7f00\u662f`\"_stripped\"`\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4f20\u9012\u7ed9`RecordAlias(alias, strippedSuffix)`\u7684\u9644\u52a0\u5b57\u7b26\u4e32\u53c2\u6570\u6765\u5b9a\u4e49\u8fd9\u4e2a\uff1a\n\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nclass CustomStrippedBundle extends Bundle with HasTypeAlias {\n  override def aliasName = RecordAlias(\"StrippedBundle\", \"Foo\")\n  val flipped = Flipped(UInt(8.W))\n  val normal = UInt(8.W)\n}\n</code></pre></p> <p>```scala mdoc emitFIRRTL(new Module {   val in = IO(Input(new CustomStrippedBundle)) }) <pre><code>### \u6211\u60f3\u6dfb\u52a0\u4e00\u4e9b\u786c\u4ef6\u6216\u65ad\u8a00\uff0c\u4f46\u6bcf\u6b21\u6211\u8fd9\u6837\u505a\u65f6\uff0c\u6240\u6709\u7684\u4fe1\u53f7\u540d\u79f0\u90fd\u4f1a\u53d8\u5316\uff01\n\n\u8fd9\u662f\u7ecf\u5178\u7684\"ECO\"\u95ee\u9898\uff0c\u6211\u4eec\u5728[\u89e3\u91ca](../explanations/naming)\u4e2d\u63d0\u4f9b\u4e86\u63cf\u8ff0\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\n\u6211\u4eec\u5efa\u8bae\u5c06\u6240\u6709\u989d\u5916\u7684\u903b\u8f91\u5305\u88c5\u5728\u4e00\u4e2a\u524d\u7f00\u4f5c\u7528\u57df\u4e2d\uff0c\u8fd9\u53ef\u4ee5\u542f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u547d\u540d\u7a7a\u95f4\u3002\u8fd9\u5e94\u8be5\u9632\u6b62\n\u540d\u79f0\u51b2\u7a81\uff0c\u8fd9\u662f\u89e6\u53d1\u6240\u6709\u90a3\u4e9b\u70e6\u4eba\u7684\u4fe1\u53f7\u540d\u79f0\u53d8\u5316\u7684\u539f\u56e0\uff01\n\n### \u6211\u60f3\u5f3a\u5236\u4e00\u4e2a\u4fe1\u53f7\uff08\u6216\u5b9e\u4f8b\uff09\u540d\u79f0\u4e3a\u67d0\u4e2a\u7279\u5b9a\u503c\uff0c\u5982\u4f55\u505a\u5230\u8fd9\u4e00\u70b9\uff1f\n\n\u4f7f\u7528`.suggestName`\u65b9\u6cd5\uff0c\u5b83\u5728\u6240\u6709\u7ee7\u627f`Data`\u7684\u7c7b\u4e0a\u90fd\u53ef\u7528\u3002\n\n### \u5982\u4f55\u5728\u4ee3\u7801\u7684\u67d0\u4e9b\u90e8\u5206\u4e2d\u7701\u7565\u524d\u7f00\uff1f\n\n\u60a8\u53ef\u4ee5\u4f7f\u7528`noPrefix { ... }`\u6765\u4ece\u8be5\u4f5c\u7528\u57df\u4e2d\u751f\u6210\u7684\u6240\u6709\u4fe1\u53f7\u4e2d\u5265\u79bb\u524d\u7f00\u3002\n\n```scala mdoc\nimport chisel3.experimental.noPrefix\n\nclass ExampleNoPrefix extends Module {\n  val in = IO(Input(UInt(2.W)))\n  val out = IO(Output(UInt(5.W)))\n\n  val add = noPrefix {\n    // foo\u4e0d\u4f1a\u5f97\u5230\u524d\u7f00\n    val foo = RegNext(in + 1.U)\n    foo + in\n  }\n\n  out := add\n}\n</code></pre></p> <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nemitSystemVerilog(new ExampleNoPrefix)\n</code></pre>"},{"location":"cookbooks/naming/#_2","title":"\u6211\u4ecd\u7136\u6ca1\u6709\u5f97\u5230\u6211\u60f3\u8981\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5185\u8054\u4e00\u4e2a\u5b9e\u4f8b\u4f1a\u6539\u53d8\u6211\u7684\u540d\u79f0\uff01","text":"<p>\u5728FIRRTL\u8f6c\u6362\u91cd\u547d\u540d\u4fe1\u53f7/\u5b9e\u4f8b\u7684\u60c5\u51b5\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528<code>forcename</code> API\uff1a</p> <p>```scala mdoc import chisel3.util.experimental.{forceName, InlineInstance}</p> <p>class WrapperExample extends Module {   val in = IO(Input(UInt(3.W)))   val out = IO(Output(UInt(3.W)))   val inst = Module(new Wrapper)   inst.in := in   out := inst.out } class Wrapper extends Module with InlineInstance {   val in = IO(Input(UInt(3.W)))   val out = IO(Output(UInt(3.W)))   val inst = Module(new MyLeaf)   forceName(inst, \"inst\")   inst.in := in   out := inst.out } class MyLeaf extends Module {   val in = IO(Input(UInt(3.W)))   val out = IO(Output(UInt(3.W)))   out := in } <pre><code>```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:verilog\nemitSystemVerilog(new WrapperExample)\n</code></pre></p> <p>\u8fd9\u53ef\u4ee5\u7528\u6765\u91cd\u547d\u540d\u5b9e\u4f8b\u548c\u975e\u805a\u5408\u7c7b\u578b\u7684\u4fe1\u53f7\u3002</p>"},{"location":"cookbooks/objectmodel/","title":"\u5bf9\u8c61\u6a21\u578b\uff08ObjectModel\uff09\u624b\u518c","text":"<ul> <li>\u5bf9\u8c61\u6a21\u578b\uff08ObjectModel\uff09\u624b\u518c<ul> <li>\u4eceOM\u7c7b\u8bbf\u95ee\u6570\u636e\u7684\u793a\u4f8b</li> </ul> </li> </ul>"},{"location":"cookbooks/objectmodel/#om","title":"\u4eceOM\u7c7b\u8bbf\u95ee\u6570\u636e\u7684\u793a\u4f8b","text":"<pre><code>import chisel3._\nimport chisel3.properties._\nimport chisel3.panamaom._\n\nclass IntPropTest extends RawModule {\n  val intProp = IO(Output(Property[Int]()))\n  intProp := Property(123)\n}\n\nval converter = Seq(\n  new chisel3.stage.phases.Elaborate,\n  chisel3.panamaconverter.stage.Convert\n).foldLeft(\n  firrtl.AnnotationSeq(Seq(chisel3.stage.ChiselGeneratorAnnotation(() =&gt; new IntPropTest)))\n) { case (annos, phase) =&gt; phase.transform(annos) }\n  .collectFirst {\n    case chisel3.panamaconverter.stage.PanamaCIRCTConverterAnnotation(converter) =&gt; converter\n  }\n  .get\n\nval pm = converter.passManager()\nassert(pm.populatePreprocessTransforms())\nassert(pm.populateCHIRRTLToLowFIRRTL())\nassert(pm.populateLowFIRRTLToHW())\nassert(pm.populateFinalizeIR())\nassert(pm.run())\n\nval om = converter.om()\nval evaluator = om.evaluator()\nval obj = evaluator.instantiate(\"PropertyTest_Class\", Seq(om.newBasePathEmpty)).get\n\nval value = obj.field(\"intProp\").asInstanceOf[PanamaCIRCTOMEvaluatorValuePrimitiveInteger].integer\nassert(value === 123)\n</code></pre>"},{"location":"cookbooks/serialization/","title":"\u5e8f\u5217\u5316\u624b\u518c","text":"<ul> <li>\u5e8f\u5217\u5316\u624b\u518c<ul> <li>\u4e3a\u4ec0\u4e48\u9700\u8981\u5e8f\u5217\u5316\u6a21\u5757</li> <li>\u5982\u4f55\u4f7f\u7528SerializableModuleGenerator\u5e8f\u5217\u5316\u6a21\u5757</li> </ul> </li> </ul>"},{"location":"cookbooks/serialization/#_2","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u5e8f\u5217\u5316\u6a21\u5757","text":"<p>Chisel\u63d0\u4f9b\u4e86\u975e\u5e38\u7075\u6d3b\u7684\u786c\u4ef6\u8bbe\u8ba1\u4f53\u9a8c\u3002\u4f46\u662f\uff0c\u5728\u8bbe\u8ba1\u76f8\u5bf9\u5927\u578b\u7684\u8bbe\u8ba1\u65f6\uff0c\u6709\u65f6\u4f1a\u53d8\u5f97\u8fc7\u4e8e\u7075\u6d3b\uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u53c2\u6570\u53ef\u80fd\u6765\u81ea\uff1a1. \u5168\u5c40\u53d8\u91cf\uff1b2. \u5916\u90e8\u7c7b\uff1b3. \u71b5\uff08\u65f6\u95f4\u3001\u968f\u673a\uff09\u3002\u8fd9\u4f7f\u5f97\u63cf\u8ff0\"\u5982\u4f55\u590d\u73b0\u8fd9\u4e2a\u5355\u4e00\u6a21\u5757\uff1f\"\u53d8\u5f97\u975e\u5e38\u56f0\u96be\u6216\u4e0d\u53ef\u80fd\u3002\u8fd9\u7981\u6b62\u5bf9\u6a21\u5757\u751f\u6210\u5668\u8fdb\u884c\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u5728\u8fdb\u884cECO\u7684\u540e\u5408\u6210\u9636\u6bb5\u5f15\u5165\u95ee\u9898\uff1a\u5bf9\u6a21\u5757A\u7684\u66f4\u6539\u53ef\u80fd\u5bfc\u81f4\u6a21\u5757B\u7684\u66f4\u6539\u3002 \u56e0\u6b64\uff0c\u63d0\u4f9b\u4e86<code>SerializableModuleGenerator</code>\u3001<code>SerializableModule[T &lt;: SerializableModuleParameter]</code>\u548c<code>SerializableModuleParameter</code>\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002 \u5bf9\u4e8e\u4efb\u4f55<code>SerializableModuleGenerator</code>\uff0cChisel\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u8fd9\u4e9b\u7ea6\u675f\u6765\u81ea\u52a8\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u5b83\uff1a 1. <code>SerializableModule</code>\u4e0d\u5e94\u8be5\u662f\u5185\u90e8\u7c7b\uff0c\u56e0\u4e3a\u5916\u90e8\u7c7b\u662f\u5b83\u7684\u4e00\u4e2a\u53c2\u6570\uff1b 1. <code>SerializableModule</code>\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5176\u7c7b\u578b\u4e3a<code>SerializableModuleParameter</code>\u3002 1. \u6a21\u5757\u65e2\u4e0d\u4f9d\u8d56\u4e8e\u5168\u5c40\u53d8\u91cf\uff0c\u4e5f\u4e0d\u4f7f\u7528\u4e0d\u53ef\u91cd\u73b0\u7684\u51fd\u6570\uff08\u968f\u673a\u3001\u65f6\u95f4\u7b49\uff09\uff0c\u8fd9\u5e94\u8be5\u7531\u7528\u6237\u4fdd\u8bc1\uff0c\u56e0\u4e3aScala\u65e0\u6cd5\u68c0\u6d4b\u5b83\u3002</p> <p>\u5b83\u53ef\u4ee5\u63d0\u4f9b\u8fd9\u4e9b\u597d\u5904\uff1a 1. \u7528\u6237\u53ef\u4ee5\u4f7f\u7528<code>SerializableModuleGenerator(module: class[SerializableModule], parameter: SerializableModuleParameter)</code>\u6765\u81ea\u52a8\u5e8f\u5217\u5316\u6a21\u5757\u53ca\u5176\u53c2\u6570\u3002 1. \u7528\u6237\u53ef\u4ee5\u5728\u5176\u4ed6\u53ef\u5e8f\u5217\u5316\u53c2\u6570\u4e2d\u5d4c\u5957<code>SerializableModuleGenerator</code>\u4ee5\u8868\u793a\u76f8\u5bf9\u8f83\u5927\u7684\u53c2\u6570\u3002 1. \u7528\u6237\u53ef\u4ee5\u5c06\u4efb\u4f55<code>SerializableModuleGenerator</code>\u8be6\u7ec6\u8bf4\u660e\u4e3a\u5355\u4e2a\u6a21\u5757\u8fdb\u884c\u6d4b\u8bd5\u3002</p>"},{"location":"cookbooks/serialization/#serializablemodulegenerator","title":"\u5982\u4f55\u4f7f\u7528<code>SerializableModuleGenerator</code>\u5e8f\u5217\u5316\u6a21\u5757","text":"<p>\u8fd9\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u6240\u793a\uff0c<code>GCD</code>\u6a21\u5757\u4ee5<code>width</code>\u4f5c\u4e3a\u5176\u53c2\u6570\u3002</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3._\nimport chisel3.experimental.{SerializableModule, SerializableModuleGenerator, SerializableModuleParameter}\nimport upickle.default._\n\n// \u4e3aGCDSerializableModuleParameter\u63d0\u4f9b\u5e8f\u5217\u5316\u51fd\u6570\nobject GCDSerializableModuleParameter {\n  implicit def rwP: ReadWriter[GCDSerializableModuleParameter] = macroRW\n}\n\n// \u53c2\u6570\ncase class GCDSerializableModuleParameter(width: Int) extends SerializableModuleParameter\n\n// \u6a21\u5757\nclass GCDSerializableModule(val parameter: GCDSerializableModuleParameter)\n    extends Module\n    with SerializableModule[GCDSerializableModuleParameter] {\n  val io = IO(new Bundle {\n    val a = Input(UInt(parameter.width.W))\n    val b = Input(UInt(parameter.width.W))\n    val e = Input(Bool())\n    val z = Output(UInt(parameter.width.W))\n  })\n  val x = Reg(UInt(parameter.width.W))\n  val y = Reg(UInt(parameter.width.W))\n  val z = Reg(UInt(parameter.width.W))\n  val e = Reg(Bool())\n  when(e) {\n    x := io.a\n    y := io.b\n    z := 0.U\n  }\n  when(x =/= y) {\n    when(x &gt; y) {\n      x := x - y\n    }.otherwise {\n      y := y - x\n    }\n  }.otherwise {\n    z := x\n  }\n  io.z := z\n}\n</code></pre> \u4f7f\u7528<code>upickle</code>\u4e2d\u7684<code>write</code>\u51fd\u6570\uff0c\u5b83\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff1a <code>scala mdoc val j = upickle.default.write(   SerializableModuleGenerator(     classOf[GCDSerializableModule],     GCDSerializableModuleParameter(32)   ) )</code></p> <p>\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u4ecejson\u5b57\u7b26\u4e32\u8bfb\u53d6\u5e76\u8be6\u7ec6\u8bf4\u660e\u6a21\u5757\uff1a ```scala mdoc:compile-only circt.stage.ChiselStage.emitSystemVerilog(   upickle.default.readSerializableModuleGenerator[GCDSerializableModule, GCDSerializableModuleParameter].module() )</p>"},{"location":"cookbooks/testing/","title":"\u6d4b\u8bd5\u624b\u518c","text":""},{"location":"cookbooks/testing/#_2","title":"\u5982\u4f55\u66f4\u6539\u9ed8\u8ba4\u6d4b\u8bd5\u76ee\u5f55\uff1f","text":"<p>\u91cd\u5199<code>buildDir</code>\u65b9\u6cd5\u3002</p> <p>\u4e0b\u9762\u7684\u4f8b\u5b50\u5c06\u6d4b\u8bd5\u76ee\u5f55\u66f4\u6539\u4e3a<code>test/</code>\uff1a</p> <p>``` scala mdoc:reset:silent import chisel3._ import chisel3.simulator.scalatest.ChiselSim import java.nio.file.Paths import org.scalatest.funspec.AnyFunSpec</p> <p>class FooSpec extends FunSpec with ChiselSim {</p> <p>override def buildDir: Path = Paths.get(\"test\")</p> <p>}</p> <pre><code>## \u5982\u4f55\u4e3a\u4eff\u771f\u542f\u7528\u6ce2\u5f62\uff1f\n\n\u5982\u679c\u4f7f\u7528Scalatest\u548cChiselSim\uff0c\u5411Scalatest\u4f20\u9012`-DemitVcd=1`\u53c2\u6570\uff0c\u4f8b\u5982\uff1a\n\n``` shell\n./mill 'chisel[2.13.16].test.testOnly' chiselTests.ShiftRegistersSpec -- -DemitVcd=1\n</code></pre>"},{"location":"cookbooks/testing/#chiselsim-scalatest","title":"\u5982\u4f55\u67e5\u770bChiselSim Scalatest\u6d4b\u8bd5\u652f\u6301\u54ea\u4e9b\u9009\u9879\uff1f","text":"<p>\u5411Scalatest\u4f20\u9012<code>-Dhelp=1</code>\uff0c\u4f8b\u5982\uff1a</p> <pre><code>./mill 'chisel[2.13.16].test.testOnly' chiselTests.ShiftRegistersSpec -- -Dhelp=1\n</code></pre>"},{"location":"cookbooks/troubleshooting/","title":"\u6545\u969c\u6392\u9664","text":"<p>\u672c\u9875\u9762\u662f\u8bb0\u5f55\u4f7f\u7528Chisel3\u5f00\u53d1\u65f6\u5e38\u89c1\u548c\u4e0d\u5e38\u89c1\u95ee\u9898\u7684\u8d77\u70b9\u3002\u7279\u522b\u662f\u90a3\u4e9b\u6709\u89e3\u51b3\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4f60\u7ee7\u7eed\u524d\u8fdb\u7684\u60c5\u51b5\u3002</p>"},{"location":"cookbooks/troubleshooting/#uintsinttype-mismatch","title":"\u6307\u5b9a<code>UInt</code>/<code>SInt</code>\u7684\u5bbd\u5ea6/\u503c\u65f6\u51fa\u73b0<code>type mismatch</code>","text":"<p>\u6211\u6709\u4e00\u4e9b\u65e7\u4ee3\u7801\uff0c\u5728chisel2\u4e2d\u66fe\u7ecf\u6b63\u5e38\u5de5\u4f5c\uff08\u5982\u679c\u6211\u4f7f\u7528<code>import Chisel._</code>\u517c\u5bb9\u5c42\uff0c\u73b0\u5728\u4ecd\u7136\u53ef\u4ee5\u5de5\u4f5c\uff09\uff0c \u4f46\u5728\u76f4\u63a5\u4f7f\u7528chisel3\u65f6\u4f1a\u5bfc\u81f4<code>type mismatch</code>\u9519\u8bef\uff1a</p> <p><pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent:fail\nclass TestBlock extends Module {\n    val io = IO(new Bundle {\n        val output = Output(UInt(width=3))\n    })\n}\n</code></pre> \u4ea7\u751f <pre><code>type mismatch;\n[error]  found   : Int(3)\n[error]  required: chisel3.internal.firrtl.Width\n[error]         val output = Output(UInt(width=3))\n</code></pre></p> <p>chisel2\u4e2d\u7684\u5355\u53c2\u6570\u591a\u529f\u80fd\u5bf9\u8c61/\u6784\u9020\u51fd\u6570\u5df2\u4ecechisel3\u4e2d\u79fb\u9664\u3002 \u4eba\u4eec\u8ba4\u4e3a\u8fd9\u4e9b\u592a\u5bb9\u6613\u51fa\u9519\uff0c\u4f7f\u5f97\u5728chisel3\u4ee3\u7801\u4e2d\u96be\u4ee5\u8bca\u65ad\u9519\u8bef\u6761\u4ef6\u3002</p> <p>\u5728chisel3\u4e2d\uff0c<code>UInt</code>/<code>SInt</code>\u5bf9\u8c61/\u6784\u9020\u51fd\u6570\u7684\u5355\u4e2a\u53c2\u6570\u6307\u5b9a\u5bbd\u5ea6\uff0c\u5fc5\u987b\u662f<code>Width</code>\u7c7b\u578b\u3002 \u867d\u7136\u6ca1\u6709\u4ece<code>Int</code>\u5230<code>Width</code>\u7684\u81ea\u52a8\u8f6c\u6362\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u5bf9<code>Int</code>\u5e94\u7528<code>W</code>\u65b9\u6cd5\u5c06<code>Int</code>\u8f6c\u6362\u4e3a<code>Width</code>\u3002 \u5728chisel3\u4e2d\uff0c\u4e0a\u8ff0\u4ee3\u7801\u53d8\u4e3a\uff1a <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\nimport chisel3._\n\nclass TestBlock extends Module {\n    val io = IO(new Bundle {\n        val output = Output(UInt(3.W))\n    })\n}\n</code></pre> \u53ef\u4ee5\u901a\u8fc7\u5e94\u7528<code>U</code>\u6216<code>S</code>\u65b9\u6cd5\u4ece<code>Int</code>\u521b\u5efa<code>UInt</code>/<code>SInt</code>\u5b57\u9762\u91cf\u3002</p> <p>```scala mdoc:fail UInt(42) <pre><code>\u5728chisel2\u4e2d\uff0c\u53d8\u4e3a\n```scala\n// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\n42.U\n</code></pre> \u5728chisel3\u4e2d</p> <p>\u901a\u8fc7\u4f7f\u7528\u5e26\u6709<code>W</code>\u53c2\u6570\u7684<code>U</code>\u6216<code>S</code>\u65b9\u6cd5\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u7279\u5b9a\u5bbd\u5ea6\u7684\u5b57\u9762\u91cf\u3002 \u4f7f\u7528\uff1a <pre><code>// \u539f\u59cb\u4ee3\u7801\u5757\u4e2d\u7684\u6807\u8bb0: mdoc:silent\n1.S(8.W)\n</code></pre> \u521b\u5efa\u4e00\u4e2a8\u4f4d\u5bbd\u7684\uff08\u6709\u7b26\u53f7\uff09\u503c\u4e3a1\u7684\u5b57\u9762\u91cf\u3002</p>"}]}